import random,time,sys,threading
from math import log
print(time.strftime("%Y-%m-%d %H:%M:%S",time.localtime()))
cc=[0,1,2,3,4,5,6,7]
ccd=[0,0,0,0,5,5,5,5]
ce=[0,1,2,3,4,5,6,7,8,9,10,11]
ced=[0,0,0,0,1,1,3,3,5,5,5,5]
cmed=[1,1,3,3]

facecorner=[[0,2,3,1],[0,6,4,2],[2,4,5,3],[3,5,7,1],[1,7,6,0],[4,6,7,5]]
faceedge=[[0,1,2,3],[1,4,9,5],[2,5,10,6],[3,6,11,7],[0,7,8,4],[10,9,8,11]]
adj=[[4,3,2,1],[0,2,5,4],[0,3,5,1],[0,4,5,2],[0,1,5,3],[1,2,3,4]]
antithesis=[5,3,4,1,2,0]
positionsimplify=[0,1,2,1,2,0]
phase2rotations=[0,1,2,4,7,10,13,15,16,17]
eighteen=[18**i for i in range(28)]

t=time.time()
cpsimplify={(0, 0, 0, 0, 0, 0, 0): 0, (0, 0, 0, 0, 0, 0, 1): 1, (0, 0, 0, 0, 0, 0, 2): 2, (0, 0, 0, 0, 0, 1, 0): 3, (0, 0, 0, 0, 0, 1, 1): 4, (0, 0, 0, 0, 0, 1, 2): 5, (0, 0, 0, 0, 0, 2, 0): 6, (0, 0, 0, 0, 0, 2, 1): 7, (0, 0, 0, 0, 0, 2, 2): 8, (0, 0, 0, 0, 1, 0, 0): 9, (0, 0, 0, 0, 1, 0, 1): 10, (0, 0, 0, 0, 1, 0, 2): 11, (0, 0, 0, 0, 1, 1, 0): 12, (0, 0, 0, 0, 1, 1, 1): 13, (0, 0, 0, 0, 1, 1, 2): 14, (0, 0, 0, 0, 1, 2, 0): 15, (0, 0, 0, 0, 1, 2, 1): 16, (0, 0, 0, 0, 1, 2, 2): 17, (0, 0, 0, 0, 2, 0, 0): 18, (0, 0, 0, 0, 2, 0, 1): 19, (0, 0, 0, 0, 2, 0, 2): 20, (0, 0, 0, 0, 2, 1, 0): 21, (0, 0, 0, 0, 2, 1, 1): 22, (0, 0, 0, 0, 2, 1, 2): 23, (0, 0, 0, 0, 2, 2, 0): 24, (0, 0, 0, 0, 2, 2, 1): 25, (0, 0, 0, 0, 2, 2, 2): 26, (0, 0, 0, 1, 0, 0, 0): 27, (0, 0, 0, 1, 0, 0, 1): 28, (0, 0, 0, 1, 0, 0, 2): 29, (0, 0, 0, 1, 0, 1, 0): 30, (0, 0, 0, 1, 0, 1, 1): 31, (0, 0, 0, 1, 0, 1, 2): 32, (0, 0, 0, 1, 0, 2, 0): 33, (0, 0, 0, 1, 0, 2, 1): 34, (0, 0, 0, 1, 0, 2, 2): 35, (0, 0, 0, 1, 1, 0, 0): 36, (0, 0, 0, 1, 1, 0, 1): 37, (0, 0, 0, 1, 1, 0, 2): 38, (0, 0, 0, 1, 1, 1, 0): 39, (0, 0, 0, 1, 1, 1, 1): 40, (0, 0, 0, 1, 1, 1, 2): 41, (0, 0, 0, 1, 1, 2, 0): 42, (0, 0, 0, 1, 1, 2, 1): 43, (0, 0, 0, 1, 1, 2, 2): 44, (0, 0, 0, 1, 2, 0, 0): 45, (0, 0, 0, 1, 2, 0, 1): 46, (0, 0, 0, 1, 2, 0, 2): 47, (0, 0, 0, 1, 2, 1, 0): 48, (0, 0, 0, 1, 2, 1, 1): 49, (0, 0, 0, 1, 2, 1, 2): 50, (0, 0, 0, 1, 2, 2, 0): 51, (0, 0, 0, 1, 2, 2, 1): 52, (0, 0, 0, 1, 2, 2, 2): 53, (0, 0, 0, 2, 0, 0, 0): 54, (0, 0, 0, 2, 0, 0, 1): 55, (0, 0, 0, 2, 0, 0, 2): 56, (0, 0, 0, 2, 0, 1, 0): 57, (0, 0, 0, 2, 0, 1, 1): 58, (0, 0, 0, 2, 0, 1, 2): 59, (0, 0, 0, 2, 0, 2, 0): 60, (0, 0, 0, 2, 0, 2, 1): 61, (0, 0, 0, 2, 0, 2, 2): 62, (0, 0, 0, 2, 1, 0, 0): 63, (0, 0, 0, 2, 1, 0, 1): 64, (0, 0, 0, 2, 1, 0, 2): 65, (0, 0, 0, 2, 1, 1, 0): 66, (0, 0, 0, 2, 1, 1, 1): 67, (0, 0, 0, 2, 1, 1, 2): 68, (0, 0, 0, 2, 1, 2, 0): 69, (0, 0, 0, 2, 1, 2, 1): 70, (0, 0, 0, 2, 1, 2, 2): 71, (0, 0, 0, 2, 2, 0, 0): 72, (0, 0, 0, 2, 2, 0, 1): 73, (0, 0, 0, 2, 2, 0, 2): 74, (0, 0, 0, 2, 2, 1, 0): 75, (0, 0, 0, 2, 2, 1, 1): 76, (0, 0, 0, 2, 2, 1, 2): 77, (0, 0, 0, 2, 2, 2, 0): 78, (0, 0, 0, 2, 2, 2, 1): 79, (0, 0, 0, 2, 2, 2, 2): 80, (0, 0, 1, 0, 0, 0, 0): 81, (0, 0, 1, 0, 0, 0, 1): 82, (0, 0, 1, 0, 0, 0, 2): 83, (0, 0, 1, 0, 0, 1, 0): 84, (0, 0, 1, 0, 0, 1, 1): 85, (0, 0, 1, 0, 0, 1, 2): 86, (0, 0, 1, 0, 0, 2, 0): 87, (0, 0, 1, 0, 0, 2, 1): 88, (0, 0, 1, 0, 0, 2, 2): 89, (0, 0, 1, 0, 1, 0, 0): 90, (0, 0, 1, 0, 1, 0, 1): 91, (0, 0, 1, 0, 1, 0, 2): 92, (0, 0, 1, 0, 1, 1, 0): 93, (0, 0, 1, 0, 1, 1, 1): 94, (0, 0, 1, 0, 1, 1, 2): 95, (0, 0, 1, 0, 1, 2, 0): 96, (0, 0, 1, 0, 1, 2, 1): 97, (0, 0, 1, 0, 1, 2, 2): 98, (0, 0, 1, 0, 2, 0, 0): 99, (0, 0, 1, 0, 2, 0, 1): 100, (0, 0, 1, 0, 2, 0, 2): 101, (0, 0, 1, 0, 2, 1, 0): 102, (0, 0, 1, 0, 2, 1, 1): 103, (0, 0, 1, 0, 2, 1, 2): 104, (0, 0, 1, 0, 2, 2, 0): 105, (0, 0, 1, 0, 2, 2, 1): 106, (0, 0, 1, 0, 2, 2, 2): 107, (0, 0, 1, 1, 0, 0, 0): 108, (0, 0, 1, 1, 0, 0, 1): 109, (0, 0, 1, 1, 0, 0, 2): 110, (0, 0, 1, 1, 0, 1, 0): 111, (0, 0, 1, 1, 0, 1, 1): 112, (0, 0, 1, 1, 0, 1, 2): 113, (0, 0, 1, 1, 0, 2, 0): 114, (0, 0, 1, 1, 0, 2, 1): 115, (0, 0, 1, 1, 0, 2, 2): 116, (0, 0, 1, 1, 1, 0, 0): 117, (0, 0, 1, 1, 1, 0, 1): 118, (0, 0, 1, 1, 1, 0, 2): 119, (0, 0, 1, 1, 1, 1, 0): 120, (0, 0, 1, 1, 1, 1, 1): 121, (0, 0, 1, 1, 1, 1, 2): 122, (0, 0, 1, 1, 1, 2, 0): 123, (0, 0, 1, 1, 1, 2, 1): 124, (0, 0, 1, 1, 1, 2, 2): 125, (0, 0, 1, 1, 2, 0, 0): 126, (0, 0, 1, 1, 2, 0, 1): 127, (0, 0, 1, 1, 2, 0, 2): 128, (0, 0, 1, 1, 2, 1, 0): 129, (0, 0, 1, 1, 2, 1, 1): 130, (0, 0, 1, 1, 2, 1, 2): 131, (0, 0, 1, 1, 2, 2, 0): 132, (0, 0, 1, 1, 2, 2, 1): 133, (0, 0, 1, 1, 2, 2, 2): 134, (0, 0, 1, 2, 0, 0, 0): 135, (0, 0, 1, 2, 0, 0, 1): 136, (0, 0, 1, 2, 0, 0, 2): 137, (0, 0, 1, 2, 0, 1, 0): 138, (0, 0, 1, 2, 0, 1, 1): 139, (0, 0, 1, 2, 0, 1, 2): 140, (0, 0, 1, 2, 0, 2, 0): 141, (0, 0, 1, 2, 0, 2, 1): 142, (0, 0, 1, 2, 0, 2, 2): 143, (0, 0, 1, 2, 1, 0, 0): 144, (0, 0, 1, 2, 1, 0, 1): 145, (0, 0, 1, 2, 1, 0, 2): 146, (0, 0, 1, 2, 1, 1, 0): 147, (0, 0, 1, 2, 1, 1, 1): 148, (0, 0, 1, 2, 1, 1, 2): 149, (0, 0, 1, 2, 1, 2, 0): 150, (0, 0, 1, 2, 1, 2, 1): 151, (0, 0, 1, 2, 1, 2, 2): 152, (0, 0, 1, 2, 2, 0, 0): 153, (0, 0, 1, 2, 2, 0, 1): 154, (0, 0, 1, 2, 2, 0, 2): 155, (0, 0, 1, 2, 2, 1, 0): 156, (0, 0, 1, 2, 2, 1, 1): 157, (0, 0, 1, 2, 2, 1, 2): 158, (0, 0, 1, 2, 2, 2, 0): 159, (0, 0, 1, 2, 2, 2, 1): 160, (0, 0, 1, 2, 2, 2, 2): 161, (0, 0, 2, 0, 0, 0, 0): 162, (0, 0, 2, 0, 0, 0, 1): 163, (0, 0, 2, 0, 0, 0, 2): 164, (0, 0, 2, 0, 0, 1, 0): 165, (0, 0, 2, 0, 0, 1, 1): 166, (0, 0, 2, 0, 0, 1, 2): 167, (0, 0, 2, 0, 0, 2, 0): 168, (0, 0, 2, 0, 0, 2, 1): 169, (0, 0, 2, 0, 0, 2, 2): 170, (0, 0, 2, 0, 1, 0, 0): 171, (0, 0, 2, 0, 1, 0, 1): 172, (0, 0, 2, 0, 1, 0, 2): 173, (0, 0, 2, 0, 1, 1, 0): 174, (0, 0, 2, 0, 1, 1, 1): 175, (0, 0, 2, 0, 1, 1, 2): 176, (0, 0, 2, 0, 1, 2, 0): 177, (0, 0, 2, 0, 1, 2, 1): 178, (0, 0, 2, 0, 1, 2, 2): 179, (0, 0, 2, 0, 2, 0, 0): 180, (0, 0, 2, 0, 2, 0, 1): 181, (0, 0, 2, 0, 2, 0, 2): 182, (0, 0, 2, 0, 2, 1, 0): 183, (0, 0, 2, 0, 2, 1, 1): 184, (0, 0, 2, 0, 2, 1, 2): 185, (0, 0, 2, 0, 2, 2, 0): 186, (0, 0, 2, 0, 2, 2, 1): 187, (0, 0, 2, 0, 2, 2, 2): 188, (0, 0, 2, 1, 0, 0, 0): 189, (0, 0, 2, 1, 0, 0, 1): 190, (0, 0, 2, 1, 0, 0, 2): 191, (0, 0, 2, 1, 0, 1, 0): 192, (0, 0, 2, 1, 0, 1, 1): 193, (0, 0, 2, 1, 0, 1, 2): 194, (0, 0, 2, 1, 0, 2, 0): 195, (0, 0, 2, 1, 0, 2, 1): 196, (0, 0, 2, 1, 0, 2, 2): 197, (0, 0, 2, 1, 1, 0, 0): 198, (0, 0, 2, 1, 1, 0, 1): 199, (0, 0, 2, 1, 1, 0, 2): 200, (0, 0, 2, 1, 1, 1, 0): 201, (0, 0, 2, 1, 1, 1, 1): 202, (0, 0, 2, 1, 1, 1, 2): 203, (0, 0, 2, 1, 1, 2, 0): 204, (0, 0, 2, 1, 1, 2, 1): 205, (0, 0, 2, 1, 1, 2, 2): 206, (0, 0, 2, 1, 2, 0, 0): 207, (0, 0, 2, 1, 2, 0, 1): 208, (0, 0, 2, 1, 2, 0, 2): 209, (0, 0, 2, 1, 2, 1, 0): 210, (0, 0, 2, 1, 2, 1, 1): 211, (0, 0, 2, 1, 2, 1, 2): 212, (0, 0, 2, 1, 2, 2, 0): 213, (0, 0, 2, 1, 2, 2, 1): 214, (0, 0, 2, 1, 2, 2, 2): 215, (0, 0, 2, 2, 0, 0, 0): 216, (0, 0, 2, 2, 0, 0, 1): 217, (0, 0, 2, 2, 0, 0, 2): 218, (0, 0, 2, 2, 0, 1, 0): 219, (0, 0, 2, 2, 0, 1, 1): 220, (0, 0, 2, 2, 0, 1, 2): 221, (0, 0, 2, 2, 0, 2, 0): 222, (0, 0, 2, 2, 0, 2, 1): 223, (0, 0, 2, 2, 0, 2, 2): 224, (0, 0, 2, 2, 1, 0, 0): 225, (0, 0, 2, 2, 1, 0, 1): 226, (0, 0, 2, 2, 1, 0, 2): 227, (0, 0, 2, 2, 1, 1, 0): 228, (0, 0, 2, 2, 1, 1, 1): 229, (0, 0, 2, 2, 1, 1, 2): 230, (0, 0, 2, 2, 1, 2, 0): 231, (0, 0, 2, 2, 1, 2, 1): 232, (0, 0, 2, 2, 1, 2, 2): 233, (0, 0, 2, 2, 2, 0, 0): 234, (0, 0, 2, 2, 2, 0, 1): 235, (0, 0, 2, 2, 2, 0, 2): 236, (0, 0, 2, 2, 2, 1, 0): 237, (0, 0, 2, 2, 2, 1, 1): 238, (0, 0, 2, 2, 2, 1, 2): 239, (0, 0, 2, 2, 2, 2, 0): 240, (0, 0, 2, 2, 2, 2, 1): 241, (0, 0, 2, 2, 2, 2, 2): 242, (0, 1, 0, 0, 0, 0, 0): 243, (0, 1, 0, 0, 0, 0, 1): 244, (0, 1, 0, 0, 0, 0, 2): 245, (0, 1, 0, 0, 0, 1, 0): 246, (0, 1, 0, 0, 0, 1, 1): 247, (0, 1, 0, 0, 0, 1, 2): 248, (0, 1, 0, 0, 0, 2, 0): 249, (0, 1, 0, 0, 0, 2, 1): 250, (0, 1, 0, 0, 0, 2, 2): 251, (0, 1, 0, 0, 1, 0, 0): 252, (0, 1, 0, 0, 1, 0, 1): 253, (0, 1, 0, 0, 1, 0, 2): 254, (0, 1, 0, 0, 1, 1, 0): 255, (0, 1, 0, 0, 1, 1, 1): 256, (0, 1, 0, 0, 1, 1, 2): 257, (0, 1, 0, 0, 1, 2, 0): 258, (0, 1, 0, 0, 1, 2, 1): 259, (0, 1, 0, 0, 1, 2, 2): 260, (0, 1, 0, 0, 2, 0, 0): 261, (0, 1, 0, 0, 2, 0, 1): 262, (0, 1, 0, 0, 2, 0, 2): 263, (0, 1, 0, 0, 2, 1, 0): 264, (0, 1, 0, 0, 2, 1, 1): 265, (0, 1, 0, 0, 2, 1, 2): 266, (0, 1, 0, 0, 2, 2, 0): 267, (0, 1, 0, 0, 2, 2, 1): 268, (0, 1, 0, 0, 2, 2, 2): 269, (0, 1, 0, 1, 0, 0, 0): 270, (0, 1, 0, 1, 0, 0, 1): 271, (0, 1, 0, 1, 0, 0, 2): 272, (0, 1, 0, 1, 0, 1, 0): 273, (0, 1, 0, 1, 0, 1, 1): 274, (0, 1, 0, 1, 0, 1, 2): 275, (0, 1, 0, 1, 0, 2, 0): 276, (0, 1, 0, 1, 0, 2, 1): 277, (0, 1, 0, 1, 0, 2, 2): 278, (0, 1, 0, 1, 1, 0, 0): 279, (0, 1, 0, 1, 1, 0, 1): 280, (0, 1, 0, 1, 1, 0, 2): 281, (0, 1, 0, 1, 1, 1, 0): 282, (0, 1, 0, 1, 1, 1, 1): 283, (0, 1, 0, 1, 1, 1, 2): 284, (0, 1, 0, 1, 1, 2, 0): 285, (0, 1, 0, 1, 1, 2, 1): 286, (0, 1, 0, 1, 1, 2, 2): 287, (0, 1, 0, 1, 2, 0, 0): 288, (0, 1, 0, 1, 2, 0, 1): 289, (0, 1, 0, 1, 2, 0, 2): 290, (0, 1, 0, 1, 2, 1, 0): 291, (0, 1, 0, 1, 2, 1, 1): 292, (0, 1, 0, 1, 2, 1, 2): 293, (0, 1, 0, 1, 2, 2, 0): 294, (0, 1, 0, 1, 2, 2, 1): 295, (0, 1, 0, 1, 2, 2, 2): 296, (0, 1, 0, 2, 0, 0, 0): 297, (0, 1, 0, 2, 0, 0, 1): 298, (0, 1, 0, 2, 0, 0, 2): 299, (0, 1, 0, 2, 0, 1, 0): 300, (0, 1, 0, 2, 0, 1, 1): 301, (0, 1, 0, 2, 0, 1, 2): 302, (0, 1, 0, 2, 0, 2, 0): 303, (0, 1, 0, 2, 0, 2, 1): 304, (0, 1, 0, 2, 0, 2, 2): 305, (0, 1, 0, 2, 1, 0, 0): 306, (0, 1, 0, 2, 1, 0, 1): 307, (0, 1, 0, 2, 1, 0, 2): 308, (0, 1, 0, 2, 1, 1, 0): 309, (0, 1, 0, 2, 1, 1, 1): 310, (0, 1, 0, 2, 1, 1, 2): 311, (0, 1, 0, 2, 1, 2, 0): 312, (0, 1, 0, 2, 1, 2, 1): 313, (0, 1, 0, 2, 1, 2, 2): 314, (0, 1, 0, 2, 2, 0, 0): 315, (0, 1, 0, 2, 2, 0, 1): 316, (0, 1, 0, 2, 2, 0, 2): 317, (0, 1, 0, 2, 2, 1, 0): 318, (0, 1, 0, 2, 2, 1, 1): 319, (0, 1, 0, 2, 2, 1, 2): 320, (0, 1, 0, 2, 2, 2, 0): 321, (0, 1, 0, 2, 2, 2, 1): 322, (0, 1, 0, 2, 2, 2, 2): 323, (0, 1, 1, 0, 0, 0, 0): 324, (0, 1, 1, 0, 0, 0, 1): 325, (0, 1, 1, 0, 0, 0, 2): 326, (0, 1, 1, 0, 0, 1, 0): 327, (0, 1, 1, 0, 0, 1, 1): 328, (0, 1, 1, 0, 0, 1, 2): 329, (0, 1, 1, 0, 0, 2, 0): 330, (0, 1, 1, 0, 0, 2, 1): 331, (0, 1, 1, 0, 0, 2, 2): 332, (0, 1, 1, 0, 1, 0, 0): 333, (0, 1, 1, 0, 1, 0, 1): 334, (0, 1, 1, 0, 1, 0, 2): 335, (0, 1, 1, 0, 1, 1, 0): 336, (0, 1, 1, 0, 1, 1, 1): 337, (0, 1, 1, 0, 1, 1, 2): 338, (0, 1, 1, 0, 1, 2, 0): 339, (0, 1, 1, 0, 1, 2, 1): 340, (0, 1, 1, 0, 1, 2, 2): 341, (0, 1, 1, 0, 2, 0, 0): 342, (0, 1, 1, 0, 2, 0, 1): 343, (0, 1, 1, 0, 2, 0, 2): 344, (0, 1, 1, 0, 2, 1, 0): 345, (0, 1, 1, 0, 2, 1, 1): 346, (0, 1, 1, 0, 2, 1, 2): 347, (0, 1, 1, 0, 2, 2, 0): 348, (0, 1, 1, 0, 2, 2, 1): 349, (0, 1, 1, 0, 2, 2, 2): 350, (0, 1, 1, 1, 0, 0, 0): 351, (0, 1, 1, 1, 0, 0, 1): 352, (0, 1, 1, 1, 0, 0, 2): 353, (0, 1, 1, 1, 0, 1, 0): 354, (0, 1, 1, 1, 0, 1, 1): 355, (0, 1, 1, 1, 0, 1, 2): 356, (0, 1, 1, 1, 0, 2, 0): 357, (0, 1, 1, 1, 0, 2, 1): 358, (0, 1, 1, 1, 0, 2, 2): 359, (0, 1, 1, 1, 1, 0, 0): 360, (0, 1, 1, 1, 1, 0, 1): 361, (0, 1, 1, 1, 1, 0, 2): 362, (0, 1, 1, 1, 1, 1, 0): 363, (0, 1, 1, 1, 1, 1, 1): 364, (0, 1, 1, 1, 1, 1, 2): 365, (0, 1, 1, 1, 1, 2, 0): 366, (0, 1, 1, 1, 1, 2, 1): 367, (0, 1, 1, 1, 1, 2, 2): 368, (0, 1, 1, 1, 2, 0, 0): 369, (0, 1, 1, 1, 2, 0, 1): 370, (0, 1, 1, 1, 2, 0, 2): 371, (0, 1, 1, 1, 2, 1, 0): 372, (0, 1, 1, 1, 2, 1, 1): 373, (0, 1, 1, 1, 2, 1, 2): 374, (0, 1, 1, 1, 2, 2, 0): 375, (0, 1, 1, 1, 2, 2, 1): 376, (0, 1, 1, 1, 2, 2, 2): 377, (0, 1, 1, 2, 0, 0, 0): 378, (0, 1, 1, 2, 0, 0, 1): 379, (0, 1, 1, 2, 0, 0, 2): 380, (0, 1, 1, 2, 0, 1, 0): 381, (0, 1, 1, 2, 0, 1, 1): 382, (0, 1, 1, 2, 0, 1, 2): 383, (0, 1, 1, 2, 0, 2, 0): 384, (0, 1, 1, 2, 0, 2, 1): 385, (0, 1, 1, 2, 0, 2, 2): 386, (0, 1, 1, 2, 1, 0, 0): 387, (0, 1, 1, 2, 1, 0, 1): 388, (0, 1, 1, 2, 1, 0, 2): 389, (0, 1, 1, 2, 1, 1, 0): 390, (0, 1, 1, 2, 1, 1, 1): 391, (0, 1, 1, 2, 1, 1, 2): 392, (0, 1, 1, 2, 1, 2, 0): 393, (0, 1, 1, 2, 1, 2, 1): 394, (0, 1, 1, 2, 1, 2, 2): 395, (0, 1, 1, 2, 2, 0, 0): 396, (0, 1, 1, 2, 2, 0, 1): 397, (0, 1, 1, 2, 2, 0, 2): 398, (0, 1, 1, 2, 2, 1, 0): 399, (0, 1, 1, 2, 2, 1, 1): 400, (0, 1, 1, 2, 2, 1, 2): 401, (0, 1, 1, 2, 2, 2, 0): 402, (0, 1, 1, 2, 2, 2, 1): 403, (0, 1, 1, 2, 2, 2, 2): 404, (0, 1, 2, 0, 0, 0, 0): 405, (0, 1, 2, 0, 0, 0, 1): 406, (0, 1, 2, 0, 0, 0, 2): 407, (0, 1, 2, 0, 0, 1, 0): 408, (0, 1, 2, 0, 0, 1, 1): 409, (0, 1, 2, 0, 0, 1, 2): 410, (0, 1, 2, 0, 0, 2, 0): 411, (0, 1, 2, 0, 0, 2, 1): 412, (0, 1, 2, 0, 0, 2, 2): 413, (0, 1, 2, 0, 1, 0, 0): 414, (0, 1, 2, 0, 1, 0, 1): 415, (0, 1, 2, 0, 1, 0, 2): 416, (0, 1, 2, 0, 1, 1, 0): 417, (0, 1, 2, 0, 1, 1, 1): 418, (0, 1, 2, 0, 1, 1, 2): 419, (0, 1, 2, 0, 1, 2, 0): 420, (0, 1, 2, 0, 1, 2, 1): 421, (0, 1, 2, 0, 1, 2, 2): 422, (0, 1, 2, 0, 2, 0, 0): 423, (0, 1, 2, 0, 2, 0, 1): 424, (0, 1, 2, 0, 2, 0, 2): 425, (0, 1, 2, 0, 2, 1, 0): 426, (0, 1, 2, 0, 2, 1, 1): 427, (0, 1, 2, 0, 2, 1, 2): 428, (0, 1, 2, 0, 2, 2, 0): 429, (0, 1, 2, 0, 2, 2, 1): 430, (0, 1, 2, 0, 2, 2, 2): 431, (0, 1, 2, 1, 0, 0, 0): 432, (0, 1, 2, 1, 0, 0, 1): 433, (0, 1, 2, 1, 0, 0, 2): 434, (0, 1, 2, 1, 0, 1, 0): 435, (0, 1, 2, 1, 0, 1, 1): 436, (0, 1, 2, 1, 0, 1, 2): 437, (0, 1, 2, 1, 0, 2, 0): 438, (0, 1, 2, 1, 0, 2, 1): 439, (0, 1, 2, 1, 0, 2, 2): 440, (0, 1, 2, 1, 1, 0, 0): 441, (0, 1, 2, 1, 1, 0, 1): 442, (0, 1, 2, 1, 1, 0, 2): 443, (0, 1, 2, 1, 1, 1, 0): 444, (0, 1, 2, 1, 1, 1, 1): 445, (0, 1, 2, 1, 1, 1, 2): 446, (0, 1, 2, 1, 1, 2, 0): 447, (0, 1, 2, 1, 1, 2, 1): 448, (0, 1, 2, 1, 1, 2, 2): 449, (0, 1, 2, 1, 2, 0, 0): 450, (0, 1, 2, 1, 2, 0, 1): 451, (0, 1, 2, 1, 2, 0, 2): 452, (0, 1, 2, 1, 2, 1, 0): 453, (0, 1, 2, 1, 2, 1, 1): 454, (0, 1, 2, 1, 2, 1, 2): 455, (0, 1, 2, 1, 2, 2, 0): 456, (0, 1, 2, 1, 2, 2, 1): 457, (0, 1, 2, 1, 2, 2, 2): 458, (0, 1, 2, 2, 0, 0, 0): 459, (0, 1, 2, 2, 0, 0, 1): 460, (0, 1, 2, 2, 0, 0, 2): 461, (0, 1, 2, 2, 0, 1, 0): 462, (0, 1, 2, 2, 0, 1, 1): 463, (0, 1, 2, 2, 0, 1, 2): 464, (0, 1, 2, 2, 0, 2, 0): 465, (0, 1, 2, 2, 0, 2, 1): 466, (0, 1, 2, 2, 0, 2, 2): 467, (0, 1, 2, 2, 1, 0, 0): 468, (0, 1, 2, 2, 1, 0, 1): 469, (0, 1, 2, 2, 1, 0, 2): 470, (0, 1, 2, 2, 1, 1, 0): 471, (0, 1, 2, 2, 1, 1, 1): 472, (0, 1, 2, 2, 1, 1, 2): 473, (0, 1, 2, 2, 1, 2, 0): 474, (0, 1, 2, 2, 1, 2, 1): 475, (0, 1, 2, 2, 1, 2, 2): 476, (0, 1, 2, 2, 2, 0, 0): 477, (0, 1, 2, 2, 2, 0, 1): 478, (0, 1, 2, 2, 2, 0, 2): 479, (0, 1, 2, 2, 2, 1, 0): 480, (0, 1, 2, 2, 2, 1, 1): 481, (0, 1, 2, 2, 2, 1, 2): 482, (0, 1, 2, 2, 2, 2, 0): 483, (0, 1, 2, 2, 2, 2, 1): 484, (0, 1, 2, 2, 2, 2, 2): 485, (0, 2, 0, 0, 0, 0, 0): 486, (0, 2, 0, 0, 0, 0, 1): 487, (0, 2, 0, 0, 0, 0, 2): 488, (0, 2, 0, 0, 0, 1, 0): 489, (0, 2, 0, 0, 0, 1, 1): 490, (0, 2, 0, 0, 0, 1, 2): 491, (0, 2, 0, 0, 0, 2, 0): 492, (0, 2, 0, 0, 0, 2, 1): 493, (0, 2, 0, 0, 0, 2, 2): 494, (0, 2, 0, 0, 1, 0, 0): 495, (0, 2, 0, 0, 1, 0, 1): 496, (0, 2, 0, 0, 1, 0, 2): 497, (0, 2, 0, 0, 1, 1, 0): 498, (0, 2, 0, 0, 1, 1, 1): 499, (0, 2, 0, 0, 1, 1, 2): 500, (0, 2, 0, 0, 1, 2, 0): 501, (0, 2, 0, 0, 1, 2, 1): 502, (0, 2, 0, 0, 1, 2, 2): 503, (0, 2, 0, 0, 2, 0, 0): 504, (0, 2, 0, 0, 2, 0, 1): 505, (0, 2, 0, 0, 2, 0, 2): 506, (0, 2, 0, 0, 2, 1, 0): 507, (0, 2, 0, 0, 2, 1, 1): 508, (0, 2, 0, 0, 2, 1, 2): 509, (0, 2, 0, 0, 2, 2, 0): 510, (0, 2, 0, 0, 2, 2, 1): 511, (0, 2, 0, 0, 2, 2, 2): 512, (0, 2, 0, 1, 0, 0, 0): 513, (0, 2, 0, 1, 0, 0, 1): 514, (0, 2, 0, 1, 0, 0, 2): 515, (0, 2, 0, 1, 0, 1, 0): 516, (0, 2, 0, 1, 0, 1, 1): 517, (0, 2, 0, 1, 0, 1, 2): 518, (0, 2, 0, 1, 0, 2, 0): 519, (0, 2, 0, 1, 0, 2, 1): 520, (0, 2, 0, 1, 0, 2, 2): 521, (0, 2, 0, 1, 1, 0, 0): 522, (0, 2, 0, 1, 1, 0, 1): 523, (0, 2, 0, 1, 1, 0, 2): 524, (0, 2, 0, 1, 1, 1, 0): 525, (0, 2, 0, 1, 1, 1, 1): 526, (0, 2, 0, 1, 1, 1, 2): 527, (0, 2, 0, 1, 1, 2, 0): 528, (0, 2, 0, 1, 1, 2, 1): 529, (0, 2, 0, 1, 1, 2, 2): 530, (0, 2, 0, 1, 2, 0, 0): 531, (0, 2, 0, 1, 2, 0, 1): 532, (0, 2, 0, 1, 2, 0, 2): 533, (0, 2, 0, 1, 2, 1, 0): 534, (0, 2, 0, 1, 2, 1, 1): 535, (0, 2, 0, 1, 2, 1, 2): 536, (0, 2, 0, 1, 2, 2, 0): 537, (0, 2, 0, 1, 2, 2, 1): 538, (0, 2, 0, 1, 2, 2, 2): 539, (0, 2, 0, 2, 0, 0, 0): 540, (0, 2, 0, 2, 0, 0, 1): 541, (0, 2, 0, 2, 0, 0, 2): 542, (0, 2, 0, 2, 0, 1, 0): 543, (0, 2, 0, 2, 0, 1, 1): 544, (0, 2, 0, 2, 0, 1, 2): 545, (0, 2, 0, 2, 0, 2, 0): 546, (0, 2, 0, 2, 0, 2, 1): 547, (0, 2, 0, 2, 0, 2, 2): 548, (0, 2, 0, 2, 1, 0, 0): 549, (0, 2, 0, 2, 1, 0, 1): 550, (0, 2, 0, 2, 1, 0, 2): 551, (0, 2, 0, 2, 1, 1, 0): 552, (0, 2, 0, 2, 1, 1, 1): 553, (0, 2, 0, 2, 1, 1, 2): 554, (0, 2, 0, 2, 1, 2, 0): 555, (0, 2, 0, 2, 1, 2, 1): 556, (0, 2, 0, 2, 1, 2, 2): 557, (0, 2, 0, 2, 2, 0, 0): 558, (0, 2, 0, 2, 2, 0, 1): 559, (0, 2, 0, 2, 2, 0, 2): 560, (0, 2, 0, 2, 2, 1, 0): 561, (0, 2, 0, 2, 2, 1, 1): 562, (0, 2, 0, 2, 2, 1, 2): 563, (0, 2, 0, 2, 2, 2, 0): 564, (0, 2, 0, 2, 2, 2, 1): 565, (0, 2, 0, 2, 2, 2, 2): 566, (0, 2, 1, 0, 0, 0, 0): 567, (0, 2, 1, 0, 0, 0, 1): 568, (0, 2, 1, 0, 0, 0, 2): 569, (0, 2, 1, 0, 0, 1, 0): 570, (0, 2, 1, 0, 0, 1, 1): 571, (0, 2, 1, 0, 0, 1, 2): 572, (0, 2, 1, 0, 0, 2, 0): 573, (0, 2, 1, 0, 0, 2, 1): 574, (0, 2, 1, 0, 0, 2, 2): 575, (0, 2, 1, 0, 1, 0, 0): 576, (0, 2, 1, 0, 1, 0, 1): 577, (0, 2, 1, 0, 1, 0, 2): 578, (0, 2, 1, 0, 1, 1, 0): 579, (0, 2, 1, 0, 1, 1, 1): 580, (0, 2, 1, 0, 1, 1, 2): 581, (0, 2, 1, 0, 1, 2, 0): 582, (0, 2, 1, 0, 1, 2, 1): 583, (0, 2, 1, 0, 1, 2, 2): 584, (0, 2, 1, 0, 2, 0, 0): 585, (0, 2, 1, 0, 2, 0, 1): 586, (0, 2, 1, 0, 2, 0, 2): 587, (0, 2, 1, 0, 2, 1, 0): 588, (0, 2, 1, 0, 2, 1, 1): 589, (0, 2, 1, 0, 2, 1, 2): 590, (0, 2, 1, 0, 2, 2, 0): 591, (0, 2, 1, 0, 2, 2, 1): 592, (0, 2, 1, 0, 2, 2, 2): 593, (0, 2, 1, 1, 0, 0, 0): 594, (0, 2, 1, 1, 0, 0, 1): 595, (0, 2, 1, 1, 0, 0, 2): 596, (0, 2, 1, 1, 0, 1, 0): 597, (0, 2, 1, 1, 0, 1, 1): 598, (0, 2, 1, 1, 0, 1, 2): 599, (0, 2, 1, 1, 0, 2, 0): 600, (0, 2, 1, 1, 0, 2, 1): 601, (0, 2, 1, 1, 0, 2, 2): 602, (0, 2, 1, 1, 1, 0, 0): 603, (0, 2, 1, 1, 1, 0, 1): 604, (0, 2, 1, 1, 1, 0, 2): 605, (0, 2, 1, 1, 1, 1, 0): 606, (0, 2, 1, 1, 1, 1, 1): 607, (0, 2, 1, 1, 1, 1, 2): 608, (0, 2, 1, 1, 1, 2, 0): 609, (0, 2, 1, 1, 1, 2, 1): 610, (0, 2, 1, 1, 1, 2, 2): 611, (0, 2, 1, 1, 2, 0, 0): 612, (0, 2, 1, 1, 2, 0, 1): 613, (0, 2, 1, 1, 2, 0, 2): 614, (0, 2, 1, 1, 2, 1, 0): 615, (0, 2, 1, 1, 2, 1, 1): 616, (0, 2, 1, 1, 2, 1, 2): 617, (0, 2, 1, 1, 2, 2, 0): 618, (0, 2, 1, 1, 2, 2, 1): 619, (0, 2, 1, 1, 2, 2, 2): 620, (0, 2, 1, 2, 0, 0, 0): 621, (0, 2, 1, 2, 0, 0, 1): 622, (0, 2, 1, 2, 0, 0, 2): 623, (0, 2, 1, 2, 0, 1, 0): 624, (0, 2, 1, 2, 0, 1, 1): 625, (0, 2, 1, 2, 0, 1, 2): 626, (0, 2, 1, 2, 0, 2, 0): 627, (0, 2, 1, 2, 0, 2, 1): 628, (0, 2, 1, 2, 0, 2, 2): 629, (0, 2, 1, 2, 1, 0, 0): 630, (0, 2, 1, 2, 1, 0, 1): 631, (0, 2, 1, 2, 1, 0, 2): 632, (0, 2, 1, 2, 1, 1, 0): 633, (0, 2, 1, 2, 1, 1, 1): 634, (0, 2, 1, 2, 1, 1, 2): 635, (0, 2, 1, 2, 1, 2, 0): 636, (0, 2, 1, 2, 1, 2, 1): 637, (0, 2, 1, 2, 1, 2, 2): 638, (0, 2, 1, 2, 2, 0, 0): 639, (0, 2, 1, 2, 2, 0, 1): 640, (0, 2, 1, 2, 2, 0, 2): 641, (0, 2, 1, 2, 2, 1, 0): 642, (0, 2, 1, 2, 2, 1, 1): 643, (0, 2, 1, 2, 2, 1, 2): 644, (0, 2, 1, 2, 2, 2, 0): 645, (0, 2, 1, 2, 2, 2, 1): 646, (0, 2, 1, 2, 2, 2, 2): 647, (0, 2, 2, 0, 0, 0, 0): 648, (0, 2, 2, 0, 0, 0, 1): 649, (0, 2, 2, 0, 0, 0, 2): 650, (0, 2, 2, 0, 0, 1, 0): 651, (0, 2, 2, 0, 0, 1, 1): 652, (0, 2, 2, 0, 0, 1, 2): 653, (0, 2, 2, 0, 0, 2, 0): 654, (0, 2, 2, 0, 0, 2, 1): 655, (0, 2, 2, 0, 0, 2, 2): 656, (0, 2, 2, 0, 1, 0, 0): 657, (0, 2, 2, 0, 1, 0, 1): 658, (0, 2, 2, 0, 1, 0, 2): 659, (0, 2, 2, 0, 1, 1, 0): 660, (0, 2, 2, 0, 1, 1, 1): 661, (0, 2, 2, 0, 1, 1, 2): 662, (0, 2, 2, 0, 1, 2, 0): 663, (0, 2, 2, 0, 1, 2, 1): 664, (0, 2, 2, 0, 1, 2, 2): 665, (0, 2, 2, 0, 2, 0, 0): 666, (0, 2, 2, 0, 2, 0, 1): 667, (0, 2, 2, 0, 2, 0, 2): 668, (0, 2, 2, 0, 2, 1, 0): 669, (0, 2, 2, 0, 2, 1, 1): 670, (0, 2, 2, 0, 2, 1, 2): 671, (0, 2, 2, 0, 2, 2, 0): 672, (0, 2, 2, 0, 2, 2, 1): 673, (0, 2, 2, 0, 2, 2, 2): 674, (0, 2, 2, 1, 0, 0, 0): 675, (0, 2, 2, 1, 0, 0, 1): 676, (0, 2, 2, 1, 0, 0, 2): 677, (0, 2, 2, 1, 0, 1, 0): 678, (0, 2, 2, 1, 0, 1, 1): 679, (0, 2, 2, 1, 0, 1, 2): 680, (0, 2, 2, 1, 0, 2, 0): 681, (0, 2, 2, 1, 0, 2, 1): 682, (0, 2, 2, 1, 0, 2, 2): 683, (0, 2, 2, 1, 1, 0, 0): 684, (0, 2, 2, 1, 1, 0, 1): 685, (0, 2, 2, 1, 1, 0, 2): 686, (0, 2, 2, 1, 1, 1, 0): 687, (0, 2, 2, 1, 1, 1, 1): 688, (0, 2, 2, 1, 1, 1, 2): 689, (0, 2, 2, 1, 1, 2, 0): 690, (0, 2, 2, 1, 1, 2, 1): 691, (0, 2, 2, 1, 1, 2, 2): 692, (0, 2, 2, 1, 2, 0, 0): 693, (0, 2, 2, 1, 2, 0, 1): 694, (0, 2, 2, 1, 2, 0, 2): 695, (0, 2, 2, 1, 2, 1, 0): 696, (0, 2, 2, 1, 2, 1, 1): 697, (0, 2, 2, 1, 2, 1, 2): 698, (0, 2, 2, 1, 2, 2, 0): 699, (0, 2, 2, 1, 2, 2, 1): 700, (0, 2, 2, 1, 2, 2, 2): 701, (0, 2, 2, 2, 0, 0, 0): 702, (0, 2, 2, 2, 0, 0, 1): 703, (0, 2, 2, 2, 0, 0, 2): 704, (0, 2, 2, 2, 0, 1, 0): 705, (0, 2, 2, 2, 0, 1, 1): 706, (0, 2, 2, 2, 0, 1, 2): 707, (0, 2, 2, 2, 0, 2, 0): 708, (0, 2, 2, 2, 0, 2, 1): 709, (0, 2, 2, 2, 0, 2, 2): 710, (0, 2, 2, 2, 1, 0, 0): 711, (0, 2, 2, 2, 1, 0, 1): 712, (0, 2, 2, 2, 1, 0, 2): 713, (0, 2, 2, 2, 1, 1, 0): 714, (0, 2, 2, 2, 1, 1, 1): 715, (0, 2, 2, 2, 1, 1, 2): 716, (0, 2, 2, 2, 1, 2, 0): 717, (0, 2, 2, 2, 1, 2, 1): 718, (0, 2, 2, 2, 1, 2, 2): 719, (0, 2, 2, 2, 2, 0, 0): 720, (0, 2, 2, 2, 2, 0, 1): 721, (0, 2, 2, 2, 2, 0, 2): 722, (0, 2, 2, 2, 2, 1, 0): 723, (0, 2, 2, 2, 2, 1, 1): 724, (0, 2, 2, 2, 2, 1, 2): 725, (0, 2, 2, 2, 2, 2, 0): 726, (0, 2, 2, 2, 2, 2, 1): 727, (0, 2, 2, 2, 2, 2, 2): 728, (1, 0, 0, 0, 0, 0, 0): 729, (1, 0, 0, 0, 0, 0, 1): 730, (1, 0, 0, 0, 0, 0, 2): 731, (1, 0, 0, 0, 0, 1, 0): 732, (1, 0, 0, 0, 0, 1, 1): 733, (1, 0, 0, 0, 0, 1, 2): 734, (1, 0, 0, 0, 0, 2, 0): 735, (1, 0, 0, 0, 0, 2, 1): 736, (1, 0, 0, 0, 0, 2, 2): 737, (1, 0, 0, 0, 1, 0, 0): 738, (1, 0, 0, 0, 1, 0, 1): 739, (1, 0, 0, 0, 1, 0, 2): 740, (1, 0, 0, 0, 1, 1, 0): 741, (1, 0, 0, 0, 1, 1, 1): 742, (1, 0, 0, 0, 1, 1, 2): 743, (1, 0, 0, 0, 1, 2, 0): 744, (1, 0, 0, 0, 1, 2, 1): 745, (1, 0, 0, 0, 1, 2, 2): 746, (1, 0, 0, 0, 2, 0, 0): 747, (1, 0, 0, 0, 2, 0, 1): 748, (1, 0, 0, 0, 2, 0, 2): 749, (1, 0, 0, 0, 2, 1, 0): 750, (1, 0, 0, 0, 2, 1, 1): 751, (1, 0, 0, 0, 2, 1, 2): 752, (1, 0, 0, 0, 2, 2, 0): 753, (1, 0, 0, 0, 2, 2, 1): 754, (1, 0, 0, 0, 2, 2, 2): 755, (1, 0, 0, 1, 0, 0, 0): 756, (1, 0, 0, 1, 0, 0, 1): 757, (1, 0, 0, 1, 0, 0, 2): 758, (1, 0, 0, 1, 0, 1, 0): 759, (1, 0, 0, 1, 0, 1, 1): 760, (1, 0, 0, 1, 0, 1, 2): 761, (1, 0, 0, 1, 0, 2, 0): 762, (1, 0, 0, 1, 0, 2, 1): 763, (1, 0, 0, 1, 0, 2, 2): 764, (1, 0, 0, 1, 1, 0, 0): 765, (1, 0, 0, 1, 1, 0, 1): 766, (1, 0, 0, 1, 1, 0, 2): 767, (1, 0, 0, 1, 1, 1, 0): 768, (1, 0, 0, 1, 1, 1, 1): 769, (1, 0, 0, 1, 1, 1, 2): 770, (1, 0, 0, 1, 1, 2, 0): 771, (1, 0, 0, 1, 1, 2, 1): 772, (1, 0, 0, 1, 1, 2, 2): 773, (1, 0, 0, 1, 2, 0, 0): 774, (1, 0, 0, 1, 2, 0, 1): 775, (1, 0, 0, 1, 2, 0, 2): 776, (1, 0, 0, 1, 2, 1, 0): 777, (1, 0, 0, 1, 2, 1, 1): 778, (1, 0, 0, 1, 2, 1, 2): 779, (1, 0, 0, 1, 2, 2, 0): 780, (1, 0, 0, 1, 2, 2, 1): 781, (1, 0, 0, 1, 2, 2, 2): 782, (1, 0, 0, 2, 0, 0, 0): 783, (1, 0, 0, 2, 0, 0, 1): 784, (1, 0, 0, 2, 0, 0, 2): 785, (1, 0, 0, 2, 0, 1, 0): 786, (1, 0, 0, 2, 0, 1, 1): 787, (1, 0, 0, 2, 0, 1, 2): 788, (1, 0, 0, 2, 0, 2, 0): 789, (1, 0, 0, 2, 0, 2, 1): 790, (1, 0, 0, 2, 0, 2, 2): 791, (1, 0, 0, 2, 1, 0, 0): 792, (1, 0, 0, 2, 1, 0, 1): 793, (1, 0, 0, 2, 1, 0, 2): 794, (1, 0, 0, 2, 1, 1, 0): 795, (1, 0, 0, 2, 1, 1, 1): 796, (1, 0, 0, 2, 1, 1, 2): 797, (1, 0, 0, 2, 1, 2, 0): 798, (1, 0, 0, 2, 1, 2, 1): 799, (1, 0, 0, 2, 1, 2, 2): 800, (1, 0, 0, 2, 2, 0, 0): 801, (1, 0, 0, 2, 2, 0, 1): 802, (1, 0, 0, 2, 2, 0, 2): 803, (1, 0, 0, 2, 2, 1, 0): 804, (1, 0, 0, 2, 2, 1, 1): 805, (1, 0, 0, 2, 2, 1, 2): 806, (1, 0, 0, 2, 2, 2, 0): 807, (1, 0, 0, 2, 2, 2, 1): 808, (1, 0, 0, 2, 2, 2, 2): 809, (1, 0, 1, 0, 0, 0, 0): 810, (1, 0, 1, 0, 0, 0, 1): 811, (1, 0, 1, 0, 0, 0, 2): 812, (1, 0, 1, 0, 0, 1, 0): 813, (1, 0, 1, 0, 0, 1, 1): 814, (1, 0, 1, 0, 0, 1, 2): 815, (1, 0, 1, 0, 0, 2, 0): 816, (1, 0, 1, 0, 0, 2, 1): 817, (1, 0, 1, 0, 0, 2, 2): 818, (1, 0, 1, 0, 1, 0, 0): 819, (1, 0, 1, 0, 1, 0, 1): 820, (1, 0, 1, 0, 1, 0, 2): 821, (1, 0, 1, 0, 1, 1, 0): 822, (1, 0, 1, 0, 1, 1, 1): 823, (1, 0, 1, 0, 1, 1, 2): 824, (1, 0, 1, 0, 1, 2, 0): 825, (1, 0, 1, 0, 1, 2, 1): 826, (1, 0, 1, 0, 1, 2, 2): 827, (1, 0, 1, 0, 2, 0, 0): 828, (1, 0, 1, 0, 2, 0, 1): 829, (1, 0, 1, 0, 2, 0, 2): 830, (1, 0, 1, 0, 2, 1, 0): 831, (1, 0, 1, 0, 2, 1, 1): 832, (1, 0, 1, 0, 2, 1, 2): 833, (1, 0, 1, 0, 2, 2, 0): 834, (1, 0, 1, 0, 2, 2, 1): 835, (1, 0, 1, 0, 2, 2, 2): 836, (1, 0, 1, 1, 0, 0, 0): 837, (1, 0, 1, 1, 0, 0, 1): 838, (1, 0, 1, 1, 0, 0, 2): 839, (1, 0, 1, 1, 0, 1, 0): 840, (1, 0, 1, 1, 0, 1, 1): 841, (1, 0, 1, 1, 0, 1, 2): 842, (1, 0, 1, 1, 0, 2, 0): 843, (1, 0, 1, 1, 0, 2, 1): 844, (1, 0, 1, 1, 0, 2, 2): 845, (1, 0, 1, 1, 1, 0, 0): 846, (1, 0, 1, 1, 1, 0, 1): 847, (1, 0, 1, 1, 1, 0, 2): 848, (1, 0, 1, 1, 1, 1, 0): 849, (1, 0, 1, 1, 1, 1, 1): 850, (1, 0, 1, 1, 1, 1, 2): 851, (1, 0, 1, 1, 1, 2, 0): 852, (1, 0, 1, 1, 1, 2, 1): 853, (1, 0, 1, 1, 1, 2, 2): 854, (1, 0, 1, 1, 2, 0, 0): 855, (1, 0, 1, 1, 2, 0, 1): 856, (1, 0, 1, 1, 2, 0, 2): 857, (1, 0, 1, 1, 2, 1, 0): 858, (1, 0, 1, 1, 2, 1, 1): 859, (1, 0, 1, 1, 2, 1, 2): 860, (1, 0, 1, 1, 2, 2, 0): 861, (1, 0, 1, 1, 2, 2, 1): 862, (1, 0, 1, 1, 2, 2, 2): 863, (1, 0, 1, 2, 0, 0, 0): 864, (1, 0, 1, 2, 0, 0, 1): 865, (1, 0, 1, 2, 0, 0, 2): 866, (1, 0, 1, 2, 0, 1, 0): 867, (1, 0, 1, 2, 0, 1, 1): 868, (1, 0, 1, 2, 0, 1, 2): 869, (1, 0, 1, 2, 0, 2, 0): 870, (1, 0, 1, 2, 0, 2, 1): 871, (1, 0, 1, 2, 0, 2, 2): 872, (1, 0, 1, 2, 1, 0, 0): 873, (1, 0, 1, 2, 1, 0, 1): 874, (1, 0, 1, 2, 1, 0, 2): 875, (1, 0, 1, 2, 1, 1, 0): 876, (1, 0, 1, 2, 1, 1, 1): 877, (1, 0, 1, 2, 1, 1, 2): 878, (1, 0, 1, 2, 1, 2, 0): 879, (1, 0, 1, 2, 1, 2, 1): 880, (1, 0, 1, 2, 1, 2, 2): 881, (1, 0, 1, 2, 2, 0, 0): 882, (1, 0, 1, 2, 2, 0, 1): 883, (1, 0, 1, 2, 2, 0, 2): 884, (1, 0, 1, 2, 2, 1, 0): 885, (1, 0, 1, 2, 2, 1, 1): 886, (1, 0, 1, 2, 2, 1, 2): 887, (1, 0, 1, 2, 2, 2, 0): 888, (1, 0, 1, 2, 2, 2, 1): 889, (1, 0, 1, 2, 2, 2, 2): 890, (1, 0, 2, 0, 0, 0, 0): 891, (1, 0, 2, 0, 0, 0, 1): 892, (1, 0, 2, 0, 0, 0, 2): 893, (1, 0, 2, 0, 0, 1, 0): 894, (1, 0, 2, 0, 0, 1, 1): 895, (1, 0, 2, 0, 0, 1, 2): 896, (1, 0, 2, 0, 0, 2, 0): 897, (1, 0, 2, 0, 0, 2, 1): 898, (1, 0, 2, 0, 0, 2, 2): 899, (1, 0, 2, 0, 1, 0, 0): 900, (1, 0, 2, 0, 1, 0, 1): 901, (1, 0, 2, 0, 1, 0, 2): 902, (1, 0, 2, 0, 1, 1, 0): 903, (1, 0, 2, 0, 1, 1, 1): 904, (1, 0, 2, 0, 1, 1, 2): 905, (1, 0, 2, 0, 1, 2, 0): 906, (1, 0, 2, 0, 1, 2, 1): 907, (1, 0, 2, 0, 1, 2, 2): 908, (1, 0, 2, 0, 2, 0, 0): 909, (1, 0, 2, 0, 2, 0, 1): 910, (1, 0, 2, 0, 2, 0, 2): 911, (1, 0, 2, 0, 2, 1, 0): 912, (1, 0, 2, 0, 2, 1, 1): 913, (1, 0, 2, 0, 2, 1, 2): 914, (1, 0, 2, 0, 2, 2, 0): 915, (1, 0, 2, 0, 2, 2, 1): 916, (1, 0, 2, 0, 2, 2, 2): 917, (1, 0, 2, 1, 0, 0, 0): 918, (1, 0, 2, 1, 0, 0, 1): 919, (1, 0, 2, 1, 0, 0, 2): 920, (1, 0, 2, 1, 0, 1, 0): 921, (1, 0, 2, 1, 0, 1, 1): 922, (1, 0, 2, 1, 0, 1, 2): 923, (1, 0, 2, 1, 0, 2, 0): 924, (1, 0, 2, 1, 0, 2, 1): 925, (1, 0, 2, 1, 0, 2, 2): 926, (1, 0, 2, 1, 1, 0, 0): 927, (1, 0, 2, 1, 1, 0, 1): 928, (1, 0, 2, 1, 1, 0, 2): 929, (1, 0, 2, 1, 1, 1, 0): 930, (1, 0, 2, 1, 1, 1, 1): 931, (1, 0, 2, 1, 1, 1, 2): 932, (1, 0, 2, 1, 1, 2, 0): 933, (1, 0, 2, 1, 1, 2, 1): 934, (1, 0, 2, 1, 1, 2, 2): 935, (1, 0, 2, 1, 2, 0, 0): 936, (1, 0, 2, 1, 2, 0, 1): 937, (1, 0, 2, 1, 2, 0, 2): 938, (1, 0, 2, 1, 2, 1, 0): 939, (1, 0, 2, 1, 2, 1, 1): 940, (1, 0, 2, 1, 2, 1, 2): 941, (1, 0, 2, 1, 2, 2, 0): 942, (1, 0, 2, 1, 2, 2, 1): 943, (1, 0, 2, 1, 2, 2, 2): 944, (1, 0, 2, 2, 0, 0, 0): 945, (1, 0, 2, 2, 0, 0, 1): 946, (1, 0, 2, 2, 0, 0, 2): 947, (1, 0, 2, 2, 0, 1, 0): 948, (1, 0, 2, 2, 0, 1, 1): 949, (1, 0, 2, 2, 0, 1, 2): 950, (1, 0, 2, 2, 0, 2, 0): 951, (1, 0, 2, 2, 0, 2, 1): 952, (1, 0, 2, 2, 0, 2, 2): 953, (1, 0, 2, 2, 1, 0, 0): 954, (1, 0, 2, 2, 1, 0, 1): 955, (1, 0, 2, 2, 1, 0, 2): 956, (1, 0, 2, 2, 1, 1, 0): 957, (1, 0, 2, 2, 1, 1, 1): 958, (1, 0, 2, 2, 1, 1, 2): 959, (1, 0, 2, 2, 1, 2, 0): 960, (1, 0, 2, 2, 1, 2, 1): 961, (1, 0, 2, 2, 1, 2, 2): 962, (1, 0, 2, 2, 2, 0, 0): 963, (1, 0, 2, 2, 2, 0, 1): 964, (1, 0, 2, 2, 2, 0, 2): 965, (1, 0, 2, 2, 2, 1, 0): 966, (1, 0, 2, 2, 2, 1, 1): 967, (1, 0, 2, 2, 2, 1, 2): 968, (1, 0, 2, 2, 2, 2, 0): 969, (1, 0, 2, 2, 2, 2, 1): 970, (1, 0, 2, 2, 2, 2, 2): 971, (1, 1, 0, 0, 0, 0, 0): 972, (1, 1, 0, 0, 0, 0, 1): 973, (1, 1, 0, 0, 0, 0, 2): 974, (1, 1, 0, 0, 0, 1, 0): 975, (1, 1, 0, 0, 0, 1, 1): 976, (1, 1, 0, 0, 0, 1, 2): 977, (1, 1, 0, 0, 0, 2, 0): 978, (1, 1, 0, 0, 0, 2, 1): 979, (1, 1, 0, 0, 0, 2, 2): 980, (1, 1, 0, 0, 1, 0, 0): 981, (1, 1, 0, 0, 1, 0, 1): 982, (1, 1, 0, 0, 1, 0, 2): 983, (1, 1, 0, 0, 1, 1, 0): 984, (1, 1, 0, 0, 1, 1, 1): 985, (1, 1, 0, 0, 1, 1, 2): 986, (1, 1, 0, 0, 1, 2, 0): 987, (1, 1, 0, 0, 1, 2, 1): 988, (1, 1, 0, 0, 1, 2, 2): 989, (1, 1, 0, 0, 2, 0, 0): 990, (1, 1, 0, 0, 2, 0, 1): 991, (1, 1, 0, 0, 2, 0, 2): 992, (1, 1, 0, 0, 2, 1, 0): 993, (1, 1, 0, 0, 2, 1, 1): 994, (1, 1, 0, 0, 2, 1, 2): 995, (1, 1, 0, 0, 2, 2, 0): 996, (1, 1, 0, 0, 2, 2, 1): 997, (1, 1, 0, 0, 2, 2, 2): 998, (1, 1, 0, 1, 0, 0, 0): 999, (1, 1, 0, 1, 0, 0, 1): 1000, (1, 1, 0, 1, 0, 0, 2): 1001, (1, 1, 0, 1, 0, 1, 0): 1002, (1, 1, 0, 1, 0, 1, 1): 1003, (1, 1, 0, 1, 0, 1, 2): 1004, (1, 1, 0, 1, 0, 2, 0): 1005, (1, 1, 0, 1, 0, 2, 1): 1006, (1, 1, 0, 1, 0, 2, 2): 1007, (1, 1, 0, 1, 1, 0, 0): 1008, (1, 1, 0, 1, 1, 0, 1): 1009, (1, 1, 0, 1, 1, 0, 2): 1010, (1, 1, 0, 1, 1, 1, 0): 1011, (1, 1, 0, 1, 1, 1, 1): 1012, (1, 1, 0, 1, 1, 1, 2): 1013, (1, 1, 0, 1, 1, 2, 0): 1014, (1, 1, 0, 1, 1, 2, 1): 1015, (1, 1, 0, 1, 1, 2, 2): 1016, (1, 1, 0, 1, 2, 0, 0): 1017, (1, 1, 0, 1, 2, 0, 1): 1018, (1, 1, 0, 1, 2, 0, 2): 1019, (1, 1, 0, 1, 2, 1, 0): 1020, (1, 1, 0, 1, 2, 1, 1): 1021, (1, 1, 0, 1, 2, 1, 2): 1022, (1, 1, 0, 1, 2, 2, 0): 1023, (1, 1, 0, 1, 2, 2, 1): 1024, (1, 1, 0, 1, 2, 2, 2): 1025, (1, 1, 0, 2, 0, 0, 0): 1026, (1, 1, 0, 2, 0, 0, 1): 1027, (1, 1, 0, 2, 0, 0, 2): 1028, (1, 1, 0, 2, 0, 1, 0): 1029, (1, 1, 0, 2, 0, 1, 1): 1030, (1, 1, 0, 2, 0, 1, 2): 1031, (1, 1, 0, 2, 0, 2, 0): 1032, (1, 1, 0, 2, 0, 2, 1): 1033, (1, 1, 0, 2, 0, 2, 2): 1034, (1, 1, 0, 2, 1, 0, 0): 1035, (1, 1, 0, 2, 1, 0, 1): 1036, (1, 1, 0, 2, 1, 0, 2): 1037, (1, 1, 0, 2, 1, 1, 0): 1038, (1, 1, 0, 2, 1, 1, 1): 1039, (1, 1, 0, 2, 1, 1, 2): 1040, (1, 1, 0, 2, 1, 2, 0): 1041, (1, 1, 0, 2, 1, 2, 1): 1042, (1, 1, 0, 2, 1, 2, 2): 1043, (1, 1, 0, 2, 2, 0, 0): 1044, (1, 1, 0, 2, 2, 0, 1): 1045, (1, 1, 0, 2, 2, 0, 2): 1046, (1, 1, 0, 2, 2, 1, 0): 1047, (1, 1, 0, 2, 2, 1, 1): 1048, (1, 1, 0, 2, 2, 1, 2): 1049, (1, 1, 0, 2, 2, 2, 0): 1050, (1, 1, 0, 2, 2, 2, 1): 1051, (1, 1, 0, 2, 2, 2, 2): 1052, (1, 1, 1, 0, 0, 0, 0): 1053, (1, 1, 1, 0, 0, 0, 1): 1054, (1, 1, 1, 0, 0, 0, 2): 1055, (1, 1, 1, 0, 0, 1, 0): 1056, (1, 1, 1, 0, 0, 1, 1): 1057, (1, 1, 1, 0, 0, 1, 2): 1058, (1, 1, 1, 0, 0, 2, 0): 1059, (1, 1, 1, 0, 0, 2, 1): 1060, (1, 1, 1, 0, 0, 2, 2): 1061, (1, 1, 1, 0, 1, 0, 0): 1062, (1, 1, 1, 0, 1, 0, 1): 1063, (1, 1, 1, 0, 1, 0, 2): 1064, (1, 1, 1, 0, 1, 1, 0): 1065, (1, 1, 1, 0, 1, 1, 1): 1066, (1, 1, 1, 0, 1, 1, 2): 1067, (1, 1, 1, 0, 1, 2, 0): 1068, (1, 1, 1, 0, 1, 2, 1): 1069, (1, 1, 1, 0, 1, 2, 2): 1070, (1, 1, 1, 0, 2, 0, 0): 1071, (1, 1, 1, 0, 2, 0, 1): 1072, (1, 1, 1, 0, 2, 0, 2): 1073, (1, 1, 1, 0, 2, 1, 0): 1074, (1, 1, 1, 0, 2, 1, 1): 1075, (1, 1, 1, 0, 2, 1, 2): 1076, (1, 1, 1, 0, 2, 2, 0): 1077, (1, 1, 1, 0, 2, 2, 1): 1078, (1, 1, 1, 0, 2, 2, 2): 1079, (1, 1, 1, 1, 0, 0, 0): 1080, (1, 1, 1, 1, 0, 0, 1): 1081, (1, 1, 1, 1, 0, 0, 2): 1082, (1, 1, 1, 1, 0, 1, 0): 1083, (1, 1, 1, 1, 0, 1, 1): 1084, (1, 1, 1, 1, 0, 1, 2): 1085, (1, 1, 1, 1, 0, 2, 0): 1086, (1, 1, 1, 1, 0, 2, 1): 1087, (1, 1, 1, 1, 0, 2, 2): 1088, (1, 1, 1, 1, 1, 0, 0): 1089, (1, 1, 1, 1, 1, 0, 1): 1090, (1, 1, 1, 1, 1, 0, 2): 1091, (1, 1, 1, 1, 1, 1, 0): 1092, (1, 1, 1, 1, 1, 1, 1): 1093, (1, 1, 1, 1, 1, 1, 2): 1094, (1, 1, 1, 1, 1, 2, 0): 1095, (1, 1, 1, 1, 1, 2, 1): 1096, (1, 1, 1, 1, 1, 2, 2): 1097, (1, 1, 1, 1, 2, 0, 0): 1098, (1, 1, 1, 1, 2, 0, 1): 1099, (1, 1, 1, 1, 2, 0, 2): 1100, (1, 1, 1, 1, 2, 1, 0): 1101, (1, 1, 1, 1, 2, 1, 1): 1102, (1, 1, 1, 1, 2, 1, 2): 1103, (1, 1, 1, 1, 2, 2, 0): 1104, (1, 1, 1, 1, 2, 2, 1): 1105, (1, 1, 1, 1, 2, 2, 2): 1106, (1, 1, 1, 2, 0, 0, 0): 1107, (1, 1, 1, 2, 0, 0, 1): 1108, (1, 1, 1, 2, 0, 0, 2): 1109, (1, 1, 1, 2, 0, 1, 0): 1110, (1, 1, 1, 2, 0, 1, 1): 1111, (1, 1, 1, 2, 0, 1, 2): 1112, (1, 1, 1, 2, 0, 2, 0): 1113, (1, 1, 1, 2, 0, 2, 1): 1114, (1, 1, 1, 2, 0, 2, 2): 1115, (1, 1, 1, 2, 1, 0, 0): 1116, (1, 1, 1, 2, 1, 0, 1): 1117, (1, 1, 1, 2, 1, 0, 2): 1118, (1, 1, 1, 2, 1, 1, 0): 1119, (1, 1, 1, 2, 1, 1, 1): 1120, (1, 1, 1, 2, 1, 1, 2): 1121, (1, 1, 1, 2, 1, 2, 0): 1122, (1, 1, 1, 2, 1, 2, 1): 1123, (1, 1, 1, 2, 1, 2, 2): 1124, (1, 1, 1, 2, 2, 0, 0): 1125, (1, 1, 1, 2, 2, 0, 1): 1126, (1, 1, 1, 2, 2, 0, 2): 1127, (1, 1, 1, 2, 2, 1, 0): 1128, (1, 1, 1, 2, 2, 1, 1): 1129, (1, 1, 1, 2, 2, 1, 2): 1130, (1, 1, 1, 2, 2, 2, 0): 1131, (1, 1, 1, 2, 2, 2, 1): 1132, (1, 1, 1, 2, 2, 2, 2): 1133, (1, 1, 2, 0, 0, 0, 0): 1134, (1, 1, 2, 0, 0, 0, 1): 1135, (1, 1, 2, 0, 0, 0, 2): 1136, (1, 1, 2, 0, 0, 1, 0): 1137, (1, 1, 2, 0, 0, 1, 1): 1138, (1, 1, 2, 0, 0, 1, 2): 1139, (1, 1, 2, 0, 0, 2, 0): 1140, (1, 1, 2, 0, 0, 2, 1): 1141, (1, 1, 2, 0, 0, 2, 2): 1142, (1, 1, 2, 0, 1, 0, 0): 1143, (1, 1, 2, 0, 1, 0, 1): 1144, (1, 1, 2, 0, 1, 0, 2): 1145, (1, 1, 2, 0, 1, 1, 0): 1146, (1, 1, 2, 0, 1, 1, 1): 1147, (1, 1, 2, 0, 1, 1, 2): 1148, (1, 1, 2, 0, 1, 2, 0): 1149, (1, 1, 2, 0, 1, 2, 1): 1150, (1, 1, 2, 0, 1, 2, 2): 1151, (1, 1, 2, 0, 2, 0, 0): 1152, (1, 1, 2, 0, 2, 0, 1): 1153, (1, 1, 2, 0, 2, 0, 2): 1154, (1, 1, 2, 0, 2, 1, 0): 1155, (1, 1, 2, 0, 2, 1, 1): 1156, (1, 1, 2, 0, 2, 1, 2): 1157, (1, 1, 2, 0, 2, 2, 0): 1158, (1, 1, 2, 0, 2, 2, 1): 1159, (1, 1, 2, 0, 2, 2, 2): 1160, (1, 1, 2, 1, 0, 0, 0): 1161, (1, 1, 2, 1, 0, 0, 1): 1162, (1, 1, 2, 1, 0, 0, 2): 1163, (1, 1, 2, 1, 0, 1, 0): 1164, (1, 1, 2, 1, 0, 1, 1): 1165, (1, 1, 2, 1, 0, 1, 2): 1166, (1, 1, 2, 1, 0, 2, 0): 1167, (1, 1, 2, 1, 0, 2, 1): 1168, (1, 1, 2, 1, 0, 2, 2): 1169, (1, 1, 2, 1, 1, 0, 0): 1170, (1, 1, 2, 1, 1, 0, 1): 1171, (1, 1, 2, 1, 1, 0, 2): 1172, (1, 1, 2, 1, 1, 1, 0): 1173, (1, 1, 2, 1, 1, 1, 1): 1174, (1, 1, 2, 1, 1, 1, 2): 1175, (1, 1, 2, 1, 1, 2, 0): 1176, (1, 1, 2, 1, 1, 2, 1): 1177, (1, 1, 2, 1, 1, 2, 2): 1178, (1, 1, 2, 1, 2, 0, 0): 1179, (1, 1, 2, 1, 2, 0, 1): 1180, (1, 1, 2, 1, 2, 0, 2): 1181, (1, 1, 2, 1, 2, 1, 0): 1182, (1, 1, 2, 1, 2, 1, 1): 1183, (1, 1, 2, 1, 2, 1, 2): 1184, (1, 1, 2, 1, 2, 2, 0): 1185, (1, 1, 2, 1, 2, 2, 1): 1186, (1, 1, 2, 1, 2, 2, 2): 1187, (1, 1, 2, 2, 0, 0, 0): 1188, (1, 1, 2, 2, 0, 0, 1): 1189, (1, 1, 2, 2, 0, 0, 2): 1190, (1, 1, 2, 2, 0, 1, 0): 1191, (1, 1, 2, 2, 0, 1, 1): 1192, (1, 1, 2, 2, 0, 1, 2): 1193, (1, 1, 2, 2, 0, 2, 0): 1194, (1, 1, 2, 2, 0, 2, 1): 1195, (1, 1, 2, 2, 0, 2, 2): 1196, (1, 1, 2, 2, 1, 0, 0): 1197, (1, 1, 2, 2, 1, 0, 1): 1198, (1, 1, 2, 2, 1, 0, 2): 1199, (1, 1, 2, 2, 1, 1, 0): 1200, (1, 1, 2, 2, 1, 1, 1): 1201, (1, 1, 2, 2, 1, 1, 2): 1202, (1, 1, 2, 2, 1, 2, 0): 1203, (1, 1, 2, 2, 1, 2, 1): 1204, (1, 1, 2, 2, 1, 2, 2): 1205, (1, 1, 2, 2, 2, 0, 0): 1206, (1, 1, 2, 2, 2, 0, 1): 1207, (1, 1, 2, 2, 2, 0, 2): 1208, (1, 1, 2, 2, 2, 1, 0): 1209, (1, 1, 2, 2, 2, 1, 1): 1210, (1, 1, 2, 2, 2, 1, 2): 1211, (1, 1, 2, 2, 2, 2, 0): 1212, (1, 1, 2, 2, 2, 2, 1): 1213, (1, 1, 2, 2, 2, 2, 2): 1214, (1, 2, 0, 0, 0, 0, 0): 1215, (1, 2, 0, 0, 0, 0, 1): 1216, (1, 2, 0, 0, 0, 0, 2): 1217, (1, 2, 0, 0, 0, 1, 0): 1218, (1, 2, 0, 0, 0, 1, 1): 1219, (1, 2, 0, 0, 0, 1, 2): 1220, (1, 2, 0, 0, 0, 2, 0): 1221, (1, 2, 0, 0, 0, 2, 1): 1222, (1, 2, 0, 0, 0, 2, 2): 1223, (1, 2, 0, 0, 1, 0, 0): 1224, (1, 2, 0, 0, 1, 0, 1): 1225, (1, 2, 0, 0, 1, 0, 2): 1226, (1, 2, 0, 0, 1, 1, 0): 1227, (1, 2, 0, 0, 1, 1, 1): 1228, (1, 2, 0, 0, 1, 1, 2): 1229, (1, 2, 0, 0, 1, 2, 0): 1230, (1, 2, 0, 0, 1, 2, 1): 1231, (1, 2, 0, 0, 1, 2, 2): 1232, (1, 2, 0, 0, 2, 0, 0): 1233, (1, 2, 0, 0, 2, 0, 1): 1234, (1, 2, 0, 0, 2, 0, 2): 1235, (1, 2, 0, 0, 2, 1, 0): 1236, (1, 2, 0, 0, 2, 1, 1): 1237, (1, 2, 0, 0, 2, 1, 2): 1238, (1, 2, 0, 0, 2, 2, 0): 1239, (1, 2, 0, 0, 2, 2, 1): 1240, (1, 2, 0, 0, 2, 2, 2): 1241, (1, 2, 0, 1, 0, 0, 0): 1242, (1, 2, 0, 1, 0, 0, 1): 1243, (1, 2, 0, 1, 0, 0, 2): 1244, (1, 2, 0, 1, 0, 1, 0): 1245, (1, 2, 0, 1, 0, 1, 1): 1246, (1, 2, 0, 1, 0, 1, 2): 1247, (1, 2, 0, 1, 0, 2, 0): 1248, (1, 2, 0, 1, 0, 2, 1): 1249, (1, 2, 0, 1, 0, 2, 2): 1250, (1, 2, 0, 1, 1, 0, 0): 1251, (1, 2, 0, 1, 1, 0, 1): 1252, (1, 2, 0, 1, 1, 0, 2): 1253, (1, 2, 0, 1, 1, 1, 0): 1254, (1, 2, 0, 1, 1, 1, 1): 1255, (1, 2, 0, 1, 1, 1, 2): 1256, (1, 2, 0, 1, 1, 2, 0): 1257, (1, 2, 0, 1, 1, 2, 1): 1258, (1, 2, 0, 1, 1, 2, 2): 1259, (1, 2, 0, 1, 2, 0, 0): 1260, (1, 2, 0, 1, 2, 0, 1): 1261, (1, 2, 0, 1, 2, 0, 2): 1262, (1, 2, 0, 1, 2, 1, 0): 1263, (1, 2, 0, 1, 2, 1, 1): 1264, (1, 2, 0, 1, 2, 1, 2): 1265, (1, 2, 0, 1, 2, 2, 0): 1266, (1, 2, 0, 1, 2, 2, 1): 1267, (1, 2, 0, 1, 2, 2, 2): 1268, (1, 2, 0, 2, 0, 0, 0): 1269, (1, 2, 0, 2, 0, 0, 1): 1270, (1, 2, 0, 2, 0, 0, 2): 1271, (1, 2, 0, 2, 0, 1, 0): 1272, (1, 2, 0, 2, 0, 1, 1): 1273, (1, 2, 0, 2, 0, 1, 2): 1274, (1, 2, 0, 2, 0, 2, 0): 1275, (1, 2, 0, 2, 0, 2, 1): 1276, (1, 2, 0, 2, 0, 2, 2): 1277, (1, 2, 0, 2, 1, 0, 0): 1278, (1, 2, 0, 2, 1, 0, 1): 1279, (1, 2, 0, 2, 1, 0, 2): 1280, (1, 2, 0, 2, 1, 1, 0): 1281, (1, 2, 0, 2, 1, 1, 1): 1282, (1, 2, 0, 2, 1, 1, 2): 1283, (1, 2, 0, 2, 1, 2, 0): 1284, (1, 2, 0, 2, 1, 2, 1): 1285, (1, 2, 0, 2, 1, 2, 2): 1286, (1, 2, 0, 2, 2, 0, 0): 1287, (1, 2, 0, 2, 2, 0, 1): 1288, (1, 2, 0, 2, 2, 0, 2): 1289, (1, 2, 0, 2, 2, 1, 0): 1290, (1, 2, 0, 2, 2, 1, 1): 1291, (1, 2, 0, 2, 2, 1, 2): 1292, (1, 2, 0, 2, 2, 2, 0): 1293, (1, 2, 0, 2, 2, 2, 1): 1294, (1, 2, 0, 2, 2, 2, 2): 1295, (1, 2, 1, 0, 0, 0, 0): 1296, (1, 2, 1, 0, 0, 0, 1): 1297, (1, 2, 1, 0, 0, 0, 2): 1298, (1, 2, 1, 0, 0, 1, 0): 1299, (1, 2, 1, 0, 0, 1, 1): 1300, (1, 2, 1, 0, 0, 1, 2): 1301, (1, 2, 1, 0, 0, 2, 0): 1302, (1, 2, 1, 0, 0, 2, 1): 1303, (1, 2, 1, 0, 0, 2, 2): 1304, (1, 2, 1, 0, 1, 0, 0): 1305, (1, 2, 1, 0, 1, 0, 1): 1306, (1, 2, 1, 0, 1, 0, 2): 1307, (1, 2, 1, 0, 1, 1, 0): 1308, (1, 2, 1, 0, 1, 1, 1): 1309, (1, 2, 1, 0, 1, 1, 2): 1310, (1, 2, 1, 0, 1, 2, 0): 1311, (1, 2, 1, 0, 1, 2, 1): 1312, (1, 2, 1, 0, 1, 2, 2): 1313, (1, 2, 1, 0, 2, 0, 0): 1314, (1, 2, 1, 0, 2, 0, 1): 1315, (1, 2, 1, 0, 2, 0, 2): 1316, (1, 2, 1, 0, 2, 1, 0): 1317, (1, 2, 1, 0, 2, 1, 1): 1318, (1, 2, 1, 0, 2, 1, 2): 1319, (1, 2, 1, 0, 2, 2, 0): 1320, (1, 2, 1, 0, 2, 2, 1): 1321, (1, 2, 1, 0, 2, 2, 2): 1322, (1, 2, 1, 1, 0, 0, 0): 1323, (1, 2, 1, 1, 0, 0, 1): 1324, (1, 2, 1, 1, 0, 0, 2): 1325, (1, 2, 1, 1, 0, 1, 0): 1326, (1, 2, 1, 1, 0, 1, 1): 1327, (1, 2, 1, 1, 0, 1, 2): 1328, (1, 2, 1, 1, 0, 2, 0): 1329, (1, 2, 1, 1, 0, 2, 1): 1330, (1, 2, 1, 1, 0, 2, 2): 1331, (1, 2, 1, 1, 1, 0, 0): 1332, (1, 2, 1, 1, 1, 0, 1): 1333, (1, 2, 1, 1, 1, 0, 2): 1334, (1, 2, 1, 1, 1, 1, 0): 1335, (1, 2, 1, 1, 1, 1, 1): 1336, (1, 2, 1, 1, 1, 1, 2): 1337, (1, 2, 1, 1, 1, 2, 0): 1338, (1, 2, 1, 1, 1, 2, 1): 1339, (1, 2, 1, 1, 1, 2, 2): 1340, (1, 2, 1, 1, 2, 0, 0): 1341, (1, 2, 1, 1, 2, 0, 1): 1342, (1, 2, 1, 1, 2, 0, 2): 1343, (1, 2, 1, 1, 2, 1, 0): 1344, (1, 2, 1, 1, 2, 1, 1): 1345, (1, 2, 1, 1, 2, 1, 2): 1346, (1, 2, 1, 1, 2, 2, 0): 1347, (1, 2, 1, 1, 2, 2, 1): 1348, (1, 2, 1, 1, 2, 2, 2): 1349, (1, 2, 1, 2, 0, 0, 0): 1350, (1, 2, 1, 2, 0, 0, 1): 1351, (1, 2, 1, 2, 0, 0, 2): 1352, (1, 2, 1, 2, 0, 1, 0): 1353, (1, 2, 1, 2, 0, 1, 1): 1354, (1, 2, 1, 2, 0, 1, 2): 1355, (1, 2, 1, 2, 0, 2, 0): 1356, (1, 2, 1, 2, 0, 2, 1): 1357, (1, 2, 1, 2, 0, 2, 2): 1358, (1, 2, 1, 2, 1, 0, 0): 1359, (1, 2, 1, 2, 1, 0, 1): 1360, (1, 2, 1, 2, 1, 0, 2): 1361, (1, 2, 1, 2, 1, 1, 0): 1362, (1, 2, 1, 2, 1, 1, 1): 1363, (1, 2, 1, 2, 1, 1, 2): 1364, (1, 2, 1, 2, 1, 2, 0): 1365, (1, 2, 1, 2, 1, 2, 1): 1366, (1, 2, 1, 2, 1, 2, 2): 1367, (1, 2, 1, 2, 2, 0, 0): 1368, (1, 2, 1, 2, 2, 0, 1): 1369, (1, 2, 1, 2, 2, 0, 2): 1370, (1, 2, 1, 2, 2, 1, 0): 1371, (1, 2, 1, 2, 2, 1, 1): 1372, (1, 2, 1, 2, 2, 1, 2): 1373, (1, 2, 1, 2, 2, 2, 0): 1374, (1, 2, 1, 2, 2, 2, 1): 1375, (1, 2, 1, 2, 2, 2, 2): 1376, (1, 2, 2, 0, 0, 0, 0): 1377, (1, 2, 2, 0, 0, 0, 1): 1378, (1, 2, 2, 0, 0, 0, 2): 1379, (1, 2, 2, 0, 0, 1, 0): 1380, (1, 2, 2, 0, 0, 1, 1): 1381, (1, 2, 2, 0, 0, 1, 2): 1382, (1, 2, 2, 0, 0, 2, 0): 1383, (1, 2, 2, 0, 0, 2, 1): 1384, (1, 2, 2, 0, 0, 2, 2): 1385, (1, 2, 2, 0, 1, 0, 0): 1386, (1, 2, 2, 0, 1, 0, 1): 1387, (1, 2, 2, 0, 1, 0, 2): 1388, (1, 2, 2, 0, 1, 1, 0): 1389, (1, 2, 2, 0, 1, 1, 1): 1390, (1, 2, 2, 0, 1, 1, 2): 1391, (1, 2, 2, 0, 1, 2, 0): 1392, (1, 2, 2, 0, 1, 2, 1): 1393, (1, 2, 2, 0, 1, 2, 2): 1394, (1, 2, 2, 0, 2, 0, 0): 1395, (1, 2, 2, 0, 2, 0, 1): 1396, (1, 2, 2, 0, 2, 0, 2): 1397, (1, 2, 2, 0, 2, 1, 0): 1398, (1, 2, 2, 0, 2, 1, 1): 1399, (1, 2, 2, 0, 2, 1, 2): 1400, (1, 2, 2, 0, 2, 2, 0): 1401, (1, 2, 2, 0, 2, 2, 1): 1402, (1, 2, 2, 0, 2, 2, 2): 1403, (1, 2, 2, 1, 0, 0, 0): 1404, (1, 2, 2, 1, 0, 0, 1): 1405, (1, 2, 2, 1, 0, 0, 2): 1406, (1, 2, 2, 1, 0, 1, 0): 1407, (1, 2, 2, 1, 0, 1, 1): 1408, (1, 2, 2, 1, 0, 1, 2): 1409, (1, 2, 2, 1, 0, 2, 0): 1410, (1, 2, 2, 1, 0, 2, 1): 1411, (1, 2, 2, 1, 0, 2, 2): 1412, (1, 2, 2, 1, 1, 0, 0): 1413, (1, 2, 2, 1, 1, 0, 1): 1414, (1, 2, 2, 1, 1, 0, 2): 1415, (1, 2, 2, 1, 1, 1, 0): 1416, (1, 2, 2, 1, 1, 1, 1): 1417, (1, 2, 2, 1, 1, 1, 2): 1418, (1, 2, 2, 1, 1, 2, 0): 1419, (1, 2, 2, 1, 1, 2, 1): 1420, (1, 2, 2, 1, 1, 2, 2): 1421, (1, 2, 2, 1, 2, 0, 0): 1422, (1, 2, 2, 1, 2, 0, 1): 1423, (1, 2, 2, 1, 2, 0, 2): 1424, (1, 2, 2, 1, 2, 1, 0): 1425, (1, 2, 2, 1, 2, 1, 1): 1426, (1, 2, 2, 1, 2, 1, 2): 1427, (1, 2, 2, 1, 2, 2, 0): 1428, (1, 2, 2, 1, 2, 2, 1): 1429, (1, 2, 2, 1, 2, 2, 2): 1430, (1, 2, 2, 2, 0, 0, 0): 1431, (1, 2, 2, 2, 0, 0, 1): 1432, (1, 2, 2, 2, 0, 0, 2): 1433, (1, 2, 2, 2, 0, 1, 0): 1434, (1, 2, 2, 2, 0, 1, 1): 1435, (1, 2, 2, 2, 0, 1, 2): 1436, (1, 2, 2, 2, 0, 2, 0): 1437, (1, 2, 2, 2, 0, 2, 1): 1438, (1, 2, 2, 2, 0, 2, 2): 1439, (1, 2, 2, 2, 1, 0, 0): 1440, (1, 2, 2, 2, 1, 0, 1): 1441, (1, 2, 2, 2, 1, 0, 2): 1442, (1, 2, 2, 2, 1, 1, 0): 1443, (1, 2, 2, 2, 1, 1, 1): 1444, (1, 2, 2, 2, 1, 1, 2): 1445, (1, 2, 2, 2, 1, 2, 0): 1446, (1, 2, 2, 2, 1, 2, 1): 1447, (1, 2, 2, 2, 1, 2, 2): 1448, (1, 2, 2, 2, 2, 0, 0): 1449, (1, 2, 2, 2, 2, 0, 1): 1450, (1, 2, 2, 2, 2, 0, 2): 1451, (1, 2, 2, 2, 2, 1, 0): 1452, (1, 2, 2, 2, 2, 1, 1): 1453, (1, 2, 2, 2, 2, 1, 2): 1454, (1, 2, 2, 2, 2, 2, 0): 1455, (1, 2, 2, 2, 2, 2, 1): 1456, (1, 2, 2, 2, 2, 2, 2): 1457, (2, 0, 0, 0, 0, 0, 0): 1458, (2, 0, 0, 0, 0, 0, 1): 1459, (2, 0, 0, 0, 0, 0, 2): 1460, (2, 0, 0, 0, 0, 1, 0): 1461, (2, 0, 0, 0, 0, 1, 1): 1462, (2, 0, 0, 0, 0, 1, 2): 1463, (2, 0, 0, 0, 0, 2, 0): 1464, (2, 0, 0, 0, 0, 2, 1): 1465, (2, 0, 0, 0, 0, 2, 2): 1466, (2, 0, 0, 0, 1, 0, 0): 1467, (2, 0, 0, 0, 1, 0, 1): 1468, (2, 0, 0, 0, 1, 0, 2): 1469, (2, 0, 0, 0, 1, 1, 0): 1470, (2, 0, 0, 0, 1, 1, 1): 1471, (2, 0, 0, 0, 1, 1, 2): 1472, (2, 0, 0, 0, 1, 2, 0): 1473, (2, 0, 0, 0, 1, 2, 1): 1474, (2, 0, 0, 0, 1, 2, 2): 1475, (2, 0, 0, 0, 2, 0, 0): 1476, (2, 0, 0, 0, 2, 0, 1): 1477, (2, 0, 0, 0, 2, 0, 2): 1478, (2, 0, 0, 0, 2, 1, 0): 1479, (2, 0, 0, 0, 2, 1, 1): 1480, (2, 0, 0, 0, 2, 1, 2): 1481, (2, 0, 0, 0, 2, 2, 0): 1482, (2, 0, 0, 0, 2, 2, 1): 1483, (2, 0, 0, 0, 2, 2, 2): 1484, (2, 0, 0, 1, 0, 0, 0): 1485, (2, 0, 0, 1, 0, 0, 1): 1486, (2, 0, 0, 1, 0, 0, 2): 1487, (2, 0, 0, 1, 0, 1, 0): 1488, (2, 0, 0, 1, 0, 1, 1): 1489, (2, 0, 0, 1, 0, 1, 2): 1490, (2, 0, 0, 1, 0, 2, 0): 1491, (2, 0, 0, 1, 0, 2, 1): 1492, (2, 0, 0, 1, 0, 2, 2): 1493, (2, 0, 0, 1, 1, 0, 0): 1494, (2, 0, 0, 1, 1, 0, 1): 1495, (2, 0, 0, 1, 1, 0, 2): 1496, (2, 0, 0, 1, 1, 1, 0): 1497, (2, 0, 0, 1, 1, 1, 1): 1498, (2, 0, 0, 1, 1, 1, 2): 1499, (2, 0, 0, 1, 1, 2, 0): 1500, (2, 0, 0, 1, 1, 2, 1): 1501, (2, 0, 0, 1, 1, 2, 2): 1502, (2, 0, 0, 1, 2, 0, 0): 1503, (2, 0, 0, 1, 2, 0, 1): 1504, (2, 0, 0, 1, 2, 0, 2): 1505, (2, 0, 0, 1, 2, 1, 0): 1506, (2, 0, 0, 1, 2, 1, 1): 1507, (2, 0, 0, 1, 2, 1, 2): 1508, (2, 0, 0, 1, 2, 2, 0): 1509, (2, 0, 0, 1, 2, 2, 1): 1510, (2, 0, 0, 1, 2, 2, 2): 1511, (2, 0, 0, 2, 0, 0, 0): 1512, (2, 0, 0, 2, 0, 0, 1): 1513, (2, 0, 0, 2, 0, 0, 2): 1514, (2, 0, 0, 2, 0, 1, 0): 1515, (2, 0, 0, 2, 0, 1, 1): 1516, (2, 0, 0, 2, 0, 1, 2): 1517, (2, 0, 0, 2, 0, 2, 0): 1518, (2, 0, 0, 2, 0, 2, 1): 1519, (2, 0, 0, 2, 0, 2, 2): 1520, (2, 0, 0, 2, 1, 0, 0): 1521, (2, 0, 0, 2, 1, 0, 1): 1522, (2, 0, 0, 2, 1, 0, 2): 1523, (2, 0, 0, 2, 1, 1, 0): 1524, (2, 0, 0, 2, 1, 1, 1): 1525, (2, 0, 0, 2, 1, 1, 2): 1526, (2, 0, 0, 2, 1, 2, 0): 1527, (2, 0, 0, 2, 1, 2, 1): 1528, (2, 0, 0, 2, 1, 2, 2): 1529, (2, 0, 0, 2, 2, 0, 0): 1530, (2, 0, 0, 2, 2, 0, 1): 1531, (2, 0, 0, 2, 2, 0, 2): 1532, (2, 0, 0, 2, 2, 1, 0): 1533, (2, 0, 0, 2, 2, 1, 1): 1534, (2, 0, 0, 2, 2, 1, 2): 1535, (2, 0, 0, 2, 2, 2, 0): 1536, (2, 0, 0, 2, 2, 2, 1): 1537, (2, 0, 0, 2, 2, 2, 2): 1538, (2, 0, 1, 0, 0, 0, 0): 1539, (2, 0, 1, 0, 0, 0, 1): 1540, (2, 0, 1, 0, 0, 0, 2): 1541, (2, 0, 1, 0, 0, 1, 0): 1542, (2, 0, 1, 0, 0, 1, 1): 1543, (2, 0, 1, 0, 0, 1, 2): 1544, (2, 0, 1, 0, 0, 2, 0): 1545, (2, 0, 1, 0, 0, 2, 1): 1546, (2, 0, 1, 0, 0, 2, 2): 1547, (2, 0, 1, 0, 1, 0, 0): 1548, (2, 0, 1, 0, 1, 0, 1): 1549, (2, 0, 1, 0, 1, 0, 2): 1550, (2, 0, 1, 0, 1, 1, 0): 1551, (2, 0, 1, 0, 1, 1, 1): 1552, (2, 0, 1, 0, 1, 1, 2): 1553, (2, 0, 1, 0, 1, 2, 0): 1554, (2, 0, 1, 0, 1, 2, 1): 1555, (2, 0, 1, 0, 1, 2, 2): 1556, (2, 0, 1, 0, 2, 0, 0): 1557, (2, 0, 1, 0, 2, 0, 1): 1558, (2, 0, 1, 0, 2, 0, 2): 1559, (2, 0, 1, 0, 2, 1, 0): 1560, (2, 0, 1, 0, 2, 1, 1): 1561, (2, 0, 1, 0, 2, 1, 2): 1562, (2, 0, 1, 0, 2, 2, 0): 1563, (2, 0, 1, 0, 2, 2, 1): 1564, (2, 0, 1, 0, 2, 2, 2): 1565, (2, 0, 1, 1, 0, 0, 0): 1566, (2, 0, 1, 1, 0, 0, 1): 1567, (2, 0, 1, 1, 0, 0, 2): 1568, (2, 0, 1, 1, 0, 1, 0): 1569, (2, 0, 1, 1, 0, 1, 1): 1570, (2, 0, 1, 1, 0, 1, 2): 1571, (2, 0, 1, 1, 0, 2, 0): 1572, (2, 0, 1, 1, 0, 2, 1): 1573, (2, 0, 1, 1, 0, 2, 2): 1574, (2, 0, 1, 1, 1, 0, 0): 1575, (2, 0, 1, 1, 1, 0, 1): 1576, (2, 0, 1, 1, 1, 0, 2): 1577, (2, 0, 1, 1, 1, 1, 0): 1578, (2, 0, 1, 1, 1, 1, 1): 1579, (2, 0, 1, 1, 1, 1, 2): 1580, (2, 0, 1, 1, 1, 2, 0): 1581, (2, 0, 1, 1, 1, 2, 1): 1582, (2, 0, 1, 1, 1, 2, 2): 1583, (2, 0, 1, 1, 2, 0, 0): 1584, (2, 0, 1, 1, 2, 0, 1): 1585, (2, 0, 1, 1, 2, 0, 2): 1586, (2, 0, 1, 1, 2, 1, 0): 1587, (2, 0, 1, 1, 2, 1, 1): 1588, (2, 0, 1, 1, 2, 1, 2): 1589, (2, 0, 1, 1, 2, 2, 0): 1590, (2, 0, 1, 1, 2, 2, 1): 1591, (2, 0, 1, 1, 2, 2, 2): 1592, (2, 0, 1, 2, 0, 0, 0): 1593, (2, 0, 1, 2, 0, 0, 1): 1594, (2, 0, 1, 2, 0, 0, 2): 1595, (2, 0, 1, 2, 0, 1, 0): 1596, (2, 0, 1, 2, 0, 1, 1): 1597, (2, 0, 1, 2, 0, 1, 2): 1598, (2, 0, 1, 2, 0, 2, 0): 1599, (2, 0, 1, 2, 0, 2, 1): 1600, (2, 0, 1, 2, 0, 2, 2): 1601, (2, 0, 1, 2, 1, 0, 0): 1602, (2, 0, 1, 2, 1, 0, 1): 1603, (2, 0, 1, 2, 1, 0, 2): 1604, (2, 0, 1, 2, 1, 1, 0): 1605, (2, 0, 1, 2, 1, 1, 1): 1606, (2, 0, 1, 2, 1, 1, 2): 1607, (2, 0, 1, 2, 1, 2, 0): 1608, (2, 0, 1, 2, 1, 2, 1): 1609, (2, 0, 1, 2, 1, 2, 2): 1610, (2, 0, 1, 2, 2, 0, 0): 1611, (2, 0, 1, 2, 2, 0, 1): 1612, (2, 0, 1, 2, 2, 0, 2): 1613, (2, 0, 1, 2, 2, 1, 0): 1614, (2, 0, 1, 2, 2, 1, 1): 1615, (2, 0, 1, 2, 2, 1, 2): 1616, (2, 0, 1, 2, 2, 2, 0): 1617, (2, 0, 1, 2, 2, 2, 1): 1618, (2, 0, 1, 2, 2, 2, 2): 1619, (2, 0, 2, 0, 0, 0, 0): 1620, (2, 0, 2, 0, 0, 0, 1): 1621, (2, 0, 2, 0, 0, 0, 2): 1622, (2, 0, 2, 0, 0, 1, 0): 1623, (2, 0, 2, 0, 0, 1, 1): 1624, (2, 0, 2, 0, 0, 1, 2): 1625, (2, 0, 2, 0, 0, 2, 0): 1626, (2, 0, 2, 0, 0, 2, 1): 1627, (2, 0, 2, 0, 0, 2, 2): 1628, (2, 0, 2, 0, 1, 0, 0): 1629, (2, 0, 2, 0, 1, 0, 1): 1630, (2, 0, 2, 0, 1, 0, 2): 1631, (2, 0, 2, 0, 1, 1, 0): 1632, (2, 0, 2, 0, 1, 1, 1): 1633, (2, 0, 2, 0, 1, 1, 2): 1634, (2, 0, 2, 0, 1, 2, 0): 1635, (2, 0, 2, 0, 1, 2, 1): 1636, (2, 0, 2, 0, 1, 2, 2): 1637, (2, 0, 2, 0, 2, 0, 0): 1638, (2, 0, 2, 0, 2, 0, 1): 1639, (2, 0, 2, 0, 2, 0, 2): 1640, (2, 0, 2, 0, 2, 1, 0): 1641, (2, 0, 2, 0, 2, 1, 1): 1642, (2, 0, 2, 0, 2, 1, 2): 1643, (2, 0, 2, 0, 2, 2, 0): 1644, (2, 0, 2, 0, 2, 2, 1): 1645, (2, 0, 2, 0, 2, 2, 2): 1646, (2, 0, 2, 1, 0, 0, 0): 1647, (2, 0, 2, 1, 0, 0, 1): 1648, (2, 0, 2, 1, 0, 0, 2): 1649, (2, 0, 2, 1, 0, 1, 0): 1650, (2, 0, 2, 1, 0, 1, 1): 1651, (2, 0, 2, 1, 0, 1, 2): 1652, (2, 0, 2, 1, 0, 2, 0): 1653, (2, 0, 2, 1, 0, 2, 1): 1654, (2, 0, 2, 1, 0, 2, 2): 1655, (2, 0, 2, 1, 1, 0, 0): 1656, (2, 0, 2, 1, 1, 0, 1): 1657, (2, 0, 2, 1, 1, 0, 2): 1658, (2, 0, 2, 1, 1, 1, 0): 1659, (2, 0, 2, 1, 1, 1, 1): 1660, (2, 0, 2, 1, 1, 1, 2): 1661, (2, 0, 2, 1, 1, 2, 0): 1662, (2, 0, 2, 1, 1, 2, 1): 1663, (2, 0, 2, 1, 1, 2, 2): 1664, (2, 0, 2, 1, 2, 0, 0): 1665, (2, 0, 2, 1, 2, 0, 1): 1666, (2, 0, 2, 1, 2, 0, 2): 1667, (2, 0, 2, 1, 2, 1, 0): 1668, (2, 0, 2, 1, 2, 1, 1): 1669, (2, 0, 2, 1, 2, 1, 2): 1670, (2, 0, 2, 1, 2, 2, 0): 1671, (2, 0, 2, 1, 2, 2, 1): 1672, (2, 0, 2, 1, 2, 2, 2): 1673, (2, 0, 2, 2, 0, 0, 0): 1674, (2, 0, 2, 2, 0, 0, 1): 1675, (2, 0, 2, 2, 0, 0, 2): 1676, (2, 0, 2, 2, 0, 1, 0): 1677, (2, 0, 2, 2, 0, 1, 1): 1678, (2, 0, 2, 2, 0, 1, 2): 1679, (2, 0, 2, 2, 0, 2, 0): 1680, (2, 0, 2, 2, 0, 2, 1): 1681, (2, 0, 2, 2, 0, 2, 2): 1682, (2, 0, 2, 2, 1, 0, 0): 1683, (2, 0, 2, 2, 1, 0, 1): 1684, (2, 0, 2, 2, 1, 0, 2): 1685, (2, 0, 2, 2, 1, 1, 0): 1686, (2, 0, 2, 2, 1, 1, 1): 1687, (2, 0, 2, 2, 1, 1, 2): 1688, (2, 0, 2, 2, 1, 2, 0): 1689, (2, 0, 2, 2, 1, 2, 1): 1690, (2, 0, 2, 2, 1, 2, 2): 1691, (2, 0, 2, 2, 2, 0, 0): 1692, (2, 0, 2, 2, 2, 0, 1): 1693, (2, 0, 2, 2, 2, 0, 2): 1694, (2, 0, 2, 2, 2, 1, 0): 1695, (2, 0, 2, 2, 2, 1, 1): 1696, (2, 0, 2, 2, 2, 1, 2): 1697, (2, 0, 2, 2, 2, 2, 0): 1698, (2, 0, 2, 2, 2, 2, 1): 1699, (2, 0, 2, 2, 2, 2, 2): 1700, (2, 1, 0, 0, 0, 0, 0): 1701, (2, 1, 0, 0, 0, 0, 1): 1702, (2, 1, 0, 0, 0, 0, 2): 1703, (2, 1, 0, 0, 0, 1, 0): 1704, (2, 1, 0, 0, 0, 1, 1): 1705, (2, 1, 0, 0, 0, 1, 2): 1706, (2, 1, 0, 0, 0, 2, 0): 1707, (2, 1, 0, 0, 0, 2, 1): 1708, (2, 1, 0, 0, 0, 2, 2): 1709, (2, 1, 0, 0, 1, 0, 0): 1710, (2, 1, 0, 0, 1, 0, 1): 1711, (2, 1, 0, 0, 1, 0, 2): 1712, (2, 1, 0, 0, 1, 1, 0): 1713, (2, 1, 0, 0, 1, 1, 1): 1714, (2, 1, 0, 0, 1, 1, 2): 1715, (2, 1, 0, 0, 1, 2, 0): 1716, (2, 1, 0, 0, 1, 2, 1): 1717, (2, 1, 0, 0, 1, 2, 2): 1718, (2, 1, 0, 0, 2, 0, 0): 1719, (2, 1, 0, 0, 2, 0, 1): 1720, (2, 1, 0, 0, 2, 0, 2): 1721, (2, 1, 0, 0, 2, 1, 0): 1722, (2, 1, 0, 0, 2, 1, 1): 1723, (2, 1, 0, 0, 2, 1, 2): 1724, (2, 1, 0, 0, 2, 2, 0): 1725, (2, 1, 0, 0, 2, 2, 1): 1726, (2, 1, 0, 0, 2, 2, 2): 1727, (2, 1, 0, 1, 0, 0, 0): 1728, (2, 1, 0, 1, 0, 0, 1): 1729, (2, 1, 0, 1, 0, 0, 2): 1730, (2, 1, 0, 1, 0, 1, 0): 1731, (2, 1, 0, 1, 0, 1, 1): 1732, (2, 1, 0, 1, 0, 1, 2): 1733, (2, 1, 0, 1, 0, 2, 0): 1734, (2, 1, 0, 1, 0, 2, 1): 1735, (2, 1, 0, 1, 0, 2, 2): 1736, (2, 1, 0, 1, 1, 0, 0): 1737, (2, 1, 0, 1, 1, 0, 1): 1738, (2, 1, 0, 1, 1, 0, 2): 1739, (2, 1, 0, 1, 1, 1, 0): 1740, (2, 1, 0, 1, 1, 1, 1): 1741, (2, 1, 0, 1, 1, 1, 2): 1742, (2, 1, 0, 1, 1, 2, 0): 1743, (2, 1, 0, 1, 1, 2, 1): 1744, (2, 1, 0, 1, 1, 2, 2): 1745, (2, 1, 0, 1, 2, 0, 0): 1746, (2, 1, 0, 1, 2, 0, 1): 1747, (2, 1, 0, 1, 2, 0, 2): 1748, (2, 1, 0, 1, 2, 1, 0): 1749, (2, 1, 0, 1, 2, 1, 1): 1750, (2, 1, 0, 1, 2, 1, 2): 1751, (2, 1, 0, 1, 2, 2, 0): 1752, (2, 1, 0, 1, 2, 2, 1): 1753, (2, 1, 0, 1, 2, 2, 2): 1754, (2, 1, 0, 2, 0, 0, 0): 1755, (2, 1, 0, 2, 0, 0, 1): 1756, (2, 1, 0, 2, 0, 0, 2): 1757, (2, 1, 0, 2, 0, 1, 0): 1758, (2, 1, 0, 2, 0, 1, 1): 1759, (2, 1, 0, 2, 0, 1, 2): 1760, (2, 1, 0, 2, 0, 2, 0): 1761, (2, 1, 0, 2, 0, 2, 1): 1762, (2, 1, 0, 2, 0, 2, 2): 1763, (2, 1, 0, 2, 1, 0, 0): 1764, (2, 1, 0, 2, 1, 0, 1): 1765, (2, 1, 0, 2, 1, 0, 2): 1766, (2, 1, 0, 2, 1, 1, 0): 1767, (2, 1, 0, 2, 1, 1, 1): 1768, (2, 1, 0, 2, 1, 1, 2): 1769, (2, 1, 0, 2, 1, 2, 0): 1770, (2, 1, 0, 2, 1, 2, 1): 1771, (2, 1, 0, 2, 1, 2, 2): 1772, (2, 1, 0, 2, 2, 0, 0): 1773, (2, 1, 0, 2, 2, 0, 1): 1774, (2, 1, 0, 2, 2, 0, 2): 1775, (2, 1, 0, 2, 2, 1, 0): 1776, (2, 1, 0, 2, 2, 1, 1): 1777, (2, 1, 0, 2, 2, 1, 2): 1778, (2, 1, 0, 2, 2, 2, 0): 1779, (2, 1, 0, 2, 2, 2, 1): 1780, (2, 1, 0, 2, 2, 2, 2): 1781, (2, 1, 1, 0, 0, 0, 0): 1782, (2, 1, 1, 0, 0, 0, 1): 1783, (2, 1, 1, 0, 0, 0, 2): 1784, (2, 1, 1, 0, 0, 1, 0): 1785, (2, 1, 1, 0, 0, 1, 1): 1786, (2, 1, 1, 0, 0, 1, 2): 1787, (2, 1, 1, 0, 0, 2, 0): 1788, (2, 1, 1, 0, 0, 2, 1): 1789, (2, 1, 1, 0, 0, 2, 2): 1790, (2, 1, 1, 0, 1, 0, 0): 1791, (2, 1, 1, 0, 1, 0, 1): 1792, (2, 1, 1, 0, 1, 0, 2): 1793, (2, 1, 1, 0, 1, 1, 0): 1794, (2, 1, 1, 0, 1, 1, 1): 1795, (2, 1, 1, 0, 1, 1, 2): 1796, (2, 1, 1, 0, 1, 2, 0): 1797, (2, 1, 1, 0, 1, 2, 1): 1798, (2, 1, 1, 0, 1, 2, 2): 1799, (2, 1, 1, 0, 2, 0, 0): 1800, (2, 1, 1, 0, 2, 0, 1): 1801, (2, 1, 1, 0, 2, 0, 2): 1802, (2, 1, 1, 0, 2, 1, 0): 1803, (2, 1, 1, 0, 2, 1, 1): 1804, (2, 1, 1, 0, 2, 1, 2): 1805, (2, 1, 1, 0, 2, 2, 0): 1806, (2, 1, 1, 0, 2, 2, 1): 1807, (2, 1, 1, 0, 2, 2, 2): 1808, (2, 1, 1, 1, 0, 0, 0): 1809, (2, 1, 1, 1, 0, 0, 1): 1810, (2, 1, 1, 1, 0, 0, 2): 1811, (2, 1, 1, 1, 0, 1, 0): 1812, (2, 1, 1, 1, 0, 1, 1): 1813, (2, 1, 1, 1, 0, 1, 2): 1814, (2, 1, 1, 1, 0, 2, 0): 1815, (2, 1, 1, 1, 0, 2, 1): 1816, (2, 1, 1, 1, 0, 2, 2): 1817, (2, 1, 1, 1, 1, 0, 0): 1818, (2, 1, 1, 1, 1, 0, 1): 1819, (2, 1, 1, 1, 1, 0, 2): 1820, (2, 1, 1, 1, 1, 1, 0): 1821, (2, 1, 1, 1, 1, 1, 1): 1822, (2, 1, 1, 1, 1, 1, 2): 1823, (2, 1, 1, 1, 1, 2, 0): 1824, (2, 1, 1, 1, 1, 2, 1): 1825, (2, 1, 1, 1, 1, 2, 2): 1826, (2, 1, 1, 1, 2, 0, 0): 1827, (2, 1, 1, 1, 2, 0, 1): 1828, (2, 1, 1, 1, 2, 0, 2): 1829, (2, 1, 1, 1, 2, 1, 0): 1830, (2, 1, 1, 1, 2, 1, 1): 1831, (2, 1, 1, 1, 2, 1, 2): 1832, (2, 1, 1, 1, 2, 2, 0): 1833, (2, 1, 1, 1, 2, 2, 1): 1834, (2, 1, 1, 1, 2, 2, 2): 1835, (2, 1, 1, 2, 0, 0, 0): 1836, (2, 1, 1, 2, 0, 0, 1): 1837, (2, 1, 1, 2, 0, 0, 2): 1838, (2, 1, 1, 2, 0, 1, 0): 1839, (2, 1, 1, 2, 0, 1, 1): 1840, (2, 1, 1, 2, 0, 1, 2): 1841, (2, 1, 1, 2, 0, 2, 0): 1842, (2, 1, 1, 2, 0, 2, 1): 1843, (2, 1, 1, 2, 0, 2, 2): 1844, (2, 1, 1, 2, 1, 0, 0): 1845, (2, 1, 1, 2, 1, 0, 1): 1846, (2, 1, 1, 2, 1, 0, 2): 1847, (2, 1, 1, 2, 1, 1, 0): 1848, (2, 1, 1, 2, 1, 1, 1): 1849, (2, 1, 1, 2, 1, 1, 2): 1850, (2, 1, 1, 2, 1, 2, 0): 1851, (2, 1, 1, 2, 1, 2, 1): 1852, (2, 1, 1, 2, 1, 2, 2): 1853, (2, 1, 1, 2, 2, 0, 0): 1854, (2, 1, 1, 2, 2, 0, 1): 1855, (2, 1, 1, 2, 2, 0, 2): 1856, (2, 1, 1, 2, 2, 1, 0): 1857, (2, 1, 1, 2, 2, 1, 1): 1858, (2, 1, 1, 2, 2, 1, 2): 1859, (2, 1, 1, 2, 2, 2, 0): 1860, (2, 1, 1, 2, 2, 2, 1): 1861, (2, 1, 1, 2, 2, 2, 2): 1862, (2, 1, 2, 0, 0, 0, 0): 1863, (2, 1, 2, 0, 0, 0, 1): 1864, (2, 1, 2, 0, 0, 0, 2): 1865, (2, 1, 2, 0, 0, 1, 0): 1866, (2, 1, 2, 0, 0, 1, 1): 1867, (2, 1, 2, 0, 0, 1, 2): 1868, (2, 1, 2, 0, 0, 2, 0): 1869, (2, 1, 2, 0, 0, 2, 1): 1870, (2, 1, 2, 0, 0, 2, 2): 1871, (2, 1, 2, 0, 1, 0, 0): 1872, (2, 1, 2, 0, 1, 0, 1): 1873, (2, 1, 2, 0, 1, 0, 2): 1874, (2, 1, 2, 0, 1, 1, 0): 1875, (2, 1, 2, 0, 1, 1, 1): 1876, (2, 1, 2, 0, 1, 1, 2): 1877, (2, 1, 2, 0, 1, 2, 0): 1878, (2, 1, 2, 0, 1, 2, 1): 1879, (2, 1, 2, 0, 1, 2, 2): 1880, (2, 1, 2, 0, 2, 0, 0): 1881, (2, 1, 2, 0, 2, 0, 1): 1882, (2, 1, 2, 0, 2, 0, 2): 1883, (2, 1, 2, 0, 2, 1, 0): 1884, (2, 1, 2, 0, 2, 1, 1): 1885, (2, 1, 2, 0, 2, 1, 2): 1886, (2, 1, 2, 0, 2, 2, 0): 1887, (2, 1, 2, 0, 2, 2, 1): 1888, (2, 1, 2, 0, 2, 2, 2): 1889, (2, 1, 2, 1, 0, 0, 0): 1890, (2, 1, 2, 1, 0, 0, 1): 1891, (2, 1, 2, 1, 0, 0, 2): 1892, (2, 1, 2, 1, 0, 1, 0): 1893, (2, 1, 2, 1, 0, 1, 1): 1894, (2, 1, 2, 1, 0, 1, 2): 1895, (2, 1, 2, 1, 0, 2, 0): 1896, (2, 1, 2, 1, 0, 2, 1): 1897, (2, 1, 2, 1, 0, 2, 2): 1898, (2, 1, 2, 1, 1, 0, 0): 1899, (2, 1, 2, 1, 1, 0, 1): 1900, (2, 1, 2, 1, 1, 0, 2): 1901, (2, 1, 2, 1, 1, 1, 0): 1902, (2, 1, 2, 1, 1, 1, 1): 1903, (2, 1, 2, 1, 1, 1, 2): 1904, (2, 1, 2, 1, 1, 2, 0): 1905, (2, 1, 2, 1, 1, 2, 1): 1906, (2, 1, 2, 1, 1, 2, 2): 1907, (2, 1, 2, 1, 2, 0, 0): 1908, (2, 1, 2, 1, 2, 0, 1): 1909, (2, 1, 2, 1, 2, 0, 2): 1910, (2, 1, 2, 1, 2, 1, 0): 1911, (2, 1, 2, 1, 2, 1, 1): 1912, (2, 1, 2, 1, 2, 1, 2): 1913, (2, 1, 2, 1, 2, 2, 0): 1914, (2, 1, 2, 1, 2, 2, 1): 1915, (2, 1, 2, 1, 2, 2, 2): 1916, (2, 1, 2, 2, 0, 0, 0): 1917, (2, 1, 2, 2, 0, 0, 1): 1918, (2, 1, 2, 2, 0, 0, 2): 1919, (2, 1, 2, 2, 0, 1, 0): 1920, (2, 1, 2, 2, 0, 1, 1): 1921, (2, 1, 2, 2, 0, 1, 2): 1922, (2, 1, 2, 2, 0, 2, 0): 1923, (2, 1, 2, 2, 0, 2, 1): 1924, (2, 1, 2, 2, 0, 2, 2): 1925, (2, 1, 2, 2, 1, 0, 0): 1926, (2, 1, 2, 2, 1, 0, 1): 1927, (2, 1, 2, 2, 1, 0, 2): 1928, (2, 1, 2, 2, 1, 1, 0): 1929, (2, 1, 2, 2, 1, 1, 1): 1930, (2, 1, 2, 2, 1, 1, 2): 1931, (2, 1, 2, 2, 1, 2, 0): 1932, (2, 1, 2, 2, 1, 2, 1): 1933, (2, 1, 2, 2, 1, 2, 2): 1934, (2, 1, 2, 2, 2, 0, 0): 1935, (2, 1, 2, 2, 2, 0, 1): 1936, (2, 1, 2, 2, 2, 0, 2): 1937, (2, 1, 2, 2, 2, 1, 0): 1938, (2, 1, 2, 2, 2, 1, 1): 1939, (2, 1, 2, 2, 2, 1, 2): 1940, (2, 1, 2, 2, 2, 2, 0): 1941, (2, 1, 2, 2, 2, 2, 1): 1942, (2, 1, 2, 2, 2, 2, 2): 1943, (2, 2, 0, 0, 0, 0, 0): 1944, (2, 2, 0, 0, 0, 0, 1): 1945, (2, 2, 0, 0, 0, 0, 2): 1946, (2, 2, 0, 0, 0, 1, 0): 1947, (2, 2, 0, 0, 0, 1, 1): 1948, (2, 2, 0, 0, 0, 1, 2): 1949, (2, 2, 0, 0, 0, 2, 0): 1950, (2, 2, 0, 0, 0, 2, 1): 1951, (2, 2, 0, 0, 0, 2, 2): 1952, (2, 2, 0, 0, 1, 0, 0): 1953, (2, 2, 0, 0, 1, 0, 1): 1954, (2, 2, 0, 0, 1, 0, 2): 1955, (2, 2, 0, 0, 1, 1, 0): 1956, (2, 2, 0, 0, 1, 1, 1): 1957, (2, 2, 0, 0, 1, 1, 2): 1958, (2, 2, 0, 0, 1, 2, 0): 1959, (2, 2, 0, 0, 1, 2, 1): 1960, (2, 2, 0, 0, 1, 2, 2): 1961, (2, 2, 0, 0, 2, 0, 0): 1962, (2, 2, 0, 0, 2, 0, 1): 1963, (2, 2, 0, 0, 2, 0, 2): 1964, (2, 2, 0, 0, 2, 1, 0): 1965, (2, 2, 0, 0, 2, 1, 1): 1966, (2, 2, 0, 0, 2, 1, 2): 1967, (2, 2, 0, 0, 2, 2, 0): 1968, (2, 2, 0, 0, 2, 2, 1): 1969, (2, 2, 0, 0, 2, 2, 2): 1970, (2, 2, 0, 1, 0, 0, 0): 1971, (2, 2, 0, 1, 0, 0, 1): 1972, (2, 2, 0, 1, 0, 0, 2): 1973, (2, 2, 0, 1, 0, 1, 0): 1974, (2, 2, 0, 1, 0, 1, 1): 1975, (2, 2, 0, 1, 0, 1, 2): 1976, (2, 2, 0, 1, 0, 2, 0): 1977, (2, 2, 0, 1, 0, 2, 1): 1978, (2, 2, 0, 1, 0, 2, 2): 1979, (2, 2, 0, 1, 1, 0, 0): 1980, (2, 2, 0, 1, 1, 0, 1): 1981, (2, 2, 0, 1, 1, 0, 2): 1982, (2, 2, 0, 1, 1, 1, 0): 1983, (2, 2, 0, 1, 1, 1, 1): 1984, (2, 2, 0, 1, 1, 1, 2): 1985, (2, 2, 0, 1, 1, 2, 0): 1986, (2, 2, 0, 1, 1, 2, 1): 1987, (2, 2, 0, 1, 1, 2, 2): 1988, (2, 2, 0, 1, 2, 0, 0): 1989, (2, 2, 0, 1, 2, 0, 1): 1990, (2, 2, 0, 1, 2, 0, 2): 1991, (2, 2, 0, 1, 2, 1, 0): 1992, (2, 2, 0, 1, 2, 1, 1): 1993, (2, 2, 0, 1, 2, 1, 2): 1994, (2, 2, 0, 1, 2, 2, 0): 1995, (2, 2, 0, 1, 2, 2, 1): 1996, (2, 2, 0, 1, 2, 2, 2): 1997, (2, 2, 0, 2, 0, 0, 0): 1998, (2, 2, 0, 2, 0, 0, 1): 1999, (2, 2, 0, 2, 0, 0, 2): 2000, (2, 2, 0, 2, 0, 1, 0): 2001, (2, 2, 0, 2, 0, 1, 1): 2002, (2, 2, 0, 2, 0, 1, 2): 2003, (2, 2, 0, 2, 0, 2, 0): 2004, (2, 2, 0, 2, 0, 2, 1): 2005, (2, 2, 0, 2, 0, 2, 2): 2006, (2, 2, 0, 2, 1, 0, 0): 2007, (2, 2, 0, 2, 1, 0, 1): 2008, (2, 2, 0, 2, 1, 0, 2): 2009, (2, 2, 0, 2, 1, 1, 0): 2010, (2, 2, 0, 2, 1, 1, 1): 2011, (2, 2, 0, 2, 1, 1, 2): 2012, (2, 2, 0, 2, 1, 2, 0): 2013, (2, 2, 0, 2, 1, 2, 1): 2014, (2, 2, 0, 2, 1, 2, 2): 2015, (2, 2, 0, 2, 2, 0, 0): 2016, (2, 2, 0, 2, 2, 0, 1): 2017, (2, 2, 0, 2, 2, 0, 2): 2018, (2, 2, 0, 2, 2, 1, 0): 2019, (2, 2, 0, 2, 2, 1, 1): 2020, (2, 2, 0, 2, 2, 1, 2): 2021, (2, 2, 0, 2, 2, 2, 0): 2022, (2, 2, 0, 2, 2, 2, 1): 2023, (2, 2, 0, 2, 2, 2, 2): 2024, (2, 2, 1, 0, 0, 0, 0): 2025, (2, 2, 1, 0, 0, 0, 1): 2026, (2, 2, 1, 0, 0, 0, 2): 2027, (2, 2, 1, 0, 0, 1, 0): 2028, (2, 2, 1, 0, 0, 1, 1): 2029, (2, 2, 1, 0, 0, 1, 2): 2030, (2, 2, 1, 0, 0, 2, 0): 2031, (2, 2, 1, 0, 0, 2, 1): 2032, (2, 2, 1, 0, 0, 2, 2): 2033, (2, 2, 1, 0, 1, 0, 0): 2034, (2, 2, 1, 0, 1, 0, 1): 2035, (2, 2, 1, 0, 1, 0, 2): 2036, (2, 2, 1, 0, 1, 1, 0): 2037, (2, 2, 1, 0, 1, 1, 1): 2038, (2, 2, 1, 0, 1, 1, 2): 2039, (2, 2, 1, 0, 1, 2, 0): 2040, (2, 2, 1, 0, 1, 2, 1): 2041, (2, 2, 1, 0, 1, 2, 2): 2042, (2, 2, 1, 0, 2, 0, 0): 2043, (2, 2, 1, 0, 2, 0, 1): 2044, (2, 2, 1, 0, 2, 0, 2): 2045, (2, 2, 1, 0, 2, 1, 0): 2046, (2, 2, 1, 0, 2, 1, 1): 2047, (2, 2, 1, 0, 2, 1, 2): 2048, (2, 2, 1, 0, 2, 2, 0): 2049, (2, 2, 1, 0, 2, 2, 1): 2050, (2, 2, 1, 0, 2, 2, 2): 2051, (2, 2, 1, 1, 0, 0, 0): 2052, (2, 2, 1, 1, 0, 0, 1): 2053, (2, 2, 1, 1, 0, 0, 2): 2054, (2, 2, 1, 1, 0, 1, 0): 2055, (2, 2, 1, 1, 0, 1, 1): 2056, (2, 2, 1, 1, 0, 1, 2): 2057, (2, 2, 1, 1, 0, 2, 0): 2058, (2, 2, 1, 1, 0, 2, 1): 2059, (2, 2, 1, 1, 0, 2, 2): 2060, (2, 2, 1, 1, 1, 0, 0): 2061, (2, 2, 1, 1, 1, 0, 1): 2062, (2, 2, 1, 1, 1, 0, 2): 2063, (2, 2, 1, 1, 1, 1, 0): 2064, (2, 2, 1, 1, 1, 1, 1): 2065, (2, 2, 1, 1, 1, 1, 2): 2066, (2, 2, 1, 1, 1, 2, 0): 2067, (2, 2, 1, 1, 1, 2, 1): 2068, (2, 2, 1, 1, 1, 2, 2): 2069, (2, 2, 1, 1, 2, 0, 0): 2070, (2, 2, 1, 1, 2, 0, 1): 2071, (2, 2, 1, 1, 2, 0, 2): 2072, (2, 2, 1, 1, 2, 1, 0): 2073, (2, 2, 1, 1, 2, 1, 1): 2074, (2, 2, 1, 1, 2, 1, 2): 2075, (2, 2, 1, 1, 2, 2, 0): 2076, (2, 2, 1, 1, 2, 2, 1): 2077, (2, 2, 1, 1, 2, 2, 2): 2078, (2, 2, 1, 2, 0, 0, 0): 2079, (2, 2, 1, 2, 0, 0, 1): 2080, (2, 2, 1, 2, 0, 0, 2): 2081, (2, 2, 1, 2, 0, 1, 0): 2082, (2, 2, 1, 2, 0, 1, 1): 2083, (2, 2, 1, 2, 0, 1, 2): 2084, (2, 2, 1, 2, 0, 2, 0): 2085, (2, 2, 1, 2, 0, 2, 1): 2086, (2, 2, 1, 2, 0, 2, 2): 2087, (2, 2, 1, 2, 1, 0, 0): 2088, (2, 2, 1, 2, 1, 0, 1): 2089, (2, 2, 1, 2, 1, 0, 2): 2090, (2, 2, 1, 2, 1, 1, 0): 2091, (2, 2, 1, 2, 1, 1, 1): 2092, (2, 2, 1, 2, 1, 1, 2): 2093, (2, 2, 1, 2, 1, 2, 0): 2094, (2, 2, 1, 2, 1, 2, 1): 2095, (2, 2, 1, 2, 1, 2, 2): 2096, (2, 2, 1, 2, 2, 0, 0): 2097, (2, 2, 1, 2, 2, 0, 1): 2098, (2, 2, 1, 2, 2, 0, 2): 2099, (2, 2, 1, 2, 2, 1, 0): 2100, (2, 2, 1, 2, 2, 1, 1): 2101, (2, 2, 1, 2, 2, 1, 2): 2102, (2, 2, 1, 2, 2, 2, 0): 2103, (2, 2, 1, 2, 2, 2, 1): 2104, (2, 2, 1, 2, 2, 2, 2): 2105, (2, 2, 2, 0, 0, 0, 0): 2106, (2, 2, 2, 0, 0, 0, 1): 2107, (2, 2, 2, 0, 0, 0, 2): 2108, (2, 2, 2, 0, 0, 1, 0): 2109, (2, 2, 2, 0, 0, 1, 1): 2110, (2, 2, 2, 0, 0, 1, 2): 2111, (2, 2, 2, 0, 0, 2, 0): 2112, (2, 2, 2, 0, 0, 2, 1): 2113, (2, 2, 2, 0, 0, 2, 2): 2114, (2, 2, 2, 0, 1, 0, 0): 2115, (2, 2, 2, 0, 1, 0, 1): 2116, (2, 2, 2, 0, 1, 0, 2): 2117, (2, 2, 2, 0, 1, 1, 0): 2118, (2, 2, 2, 0, 1, 1, 1): 2119, (2, 2, 2, 0, 1, 1, 2): 2120, (2, 2, 2, 0, 1, 2, 0): 2121, (2, 2, 2, 0, 1, 2, 1): 2122, (2, 2, 2, 0, 1, 2, 2): 2123, (2, 2, 2, 0, 2, 0, 0): 2124, (2, 2, 2, 0, 2, 0, 1): 2125, (2, 2, 2, 0, 2, 0, 2): 2126, (2, 2, 2, 0, 2, 1, 0): 2127, (2, 2, 2, 0, 2, 1, 1): 2128, (2, 2, 2, 0, 2, 1, 2): 2129, (2, 2, 2, 0, 2, 2, 0): 2130, (2, 2, 2, 0, 2, 2, 1): 2131, (2, 2, 2, 0, 2, 2, 2): 2132, (2, 2, 2, 1, 0, 0, 0): 2133, (2, 2, 2, 1, 0, 0, 1): 2134, (2, 2, 2, 1, 0, 0, 2): 2135, (2, 2, 2, 1, 0, 1, 0): 2136, (2, 2, 2, 1, 0, 1, 1): 2137, (2, 2, 2, 1, 0, 1, 2): 2138, (2, 2, 2, 1, 0, 2, 0): 2139, (2, 2, 2, 1, 0, 2, 1): 2140, (2, 2, 2, 1, 0, 2, 2): 2141, (2, 2, 2, 1, 1, 0, 0): 2142, (2, 2, 2, 1, 1, 0, 1): 2143, (2, 2, 2, 1, 1, 0, 2): 2144, (2, 2, 2, 1, 1, 1, 0): 2145, (2, 2, 2, 1, 1, 1, 1): 2146, (2, 2, 2, 1, 1, 1, 2): 2147, (2, 2, 2, 1, 1, 2, 0): 2148, (2, 2, 2, 1, 1, 2, 1): 2149, (2, 2, 2, 1, 1, 2, 2): 2150, (2, 2, 2, 1, 2, 0, 0): 2151, (2, 2, 2, 1, 2, 0, 1): 2152, (2, 2, 2, 1, 2, 0, 2): 2153, (2, 2, 2, 1, 2, 1, 0): 2154, (2, 2, 2, 1, 2, 1, 1): 2155, (2, 2, 2, 1, 2, 1, 2): 2156, (2, 2, 2, 1, 2, 2, 0): 2157, (2, 2, 2, 1, 2, 2, 1): 2158, (2, 2, 2, 1, 2, 2, 2): 2159, (2, 2, 2, 2, 0, 0, 0): 2160, (2, 2, 2, 2, 0, 0, 1): 2161, (2, 2, 2, 2, 0, 0, 2): 2162, (2, 2, 2, 2, 0, 1, 0): 2163, (2, 2, 2, 2, 0, 1, 1): 2164, (2, 2, 2, 2, 0, 1, 2): 2165, (2, 2, 2, 2, 0, 2, 0): 2166, (2, 2, 2, 2, 0, 2, 1): 2167, (2, 2, 2, 2, 0, 2, 2): 2168, (2, 2, 2, 2, 1, 0, 0): 2169, (2, 2, 2, 2, 1, 0, 1): 2170, (2, 2, 2, 2, 1, 0, 2): 2171, (2, 2, 2, 2, 1, 1, 0): 2172, (2, 2, 2, 2, 1, 1, 1): 2173, (2, 2, 2, 2, 1, 1, 2): 2174, (2, 2, 2, 2, 1, 2, 0): 2175, (2, 2, 2, 2, 1, 2, 1): 2176, (2, 2, 2, 2, 1, 2, 2): 2177, (2, 2, 2, 2, 2, 0, 0): 2178, (2, 2, 2, 2, 2, 0, 1): 2179, (2, 2, 2, 2, 2, 0, 2): 2180, (2, 2, 2, 2, 2, 1, 0): 2181, (2, 2, 2, 2, 2, 1, 1): 2182, (2, 2, 2, 2, 2, 1, 2): 2183, (2, 2, 2, 2, 2, 2, 0): 2184, (2, 2, 2, 2, 2, 2, 1): 2185, (2, 2, 2, 2, 2, 2, 2): 2186}
four=[(i,j,k,l) for i in range(3) for j in range(3) for k in range(3) for l in range(3)]
epsimplify={}
for key in cpsimplify.keys():
    value=81*cpsimplify[key]
    for i in range(81):
        epsimplify[key+four[i]]=value+i
mepsimplify={(0, 1, 2, 3): 0, (0, 1, 2, 4): 1, (0, 1, 2, 5): 2, (0, 1, 2, 6): 3, (0, 1, 2, 7): 4, (0, 1, 2, 8): 5, (0, 1, 2, 9): 6, (0, 1, 2, 10): 7, (0, 1, 2, 11): 8, (0, 1, 3, 4): 9, (0, 1, 3, 5): 10, (0, 1, 3, 6): 11, (0, 1, 3, 7): 12, (0, 1, 3, 8): 13, (0, 1, 3, 9): 14, (0, 1, 3, 10): 15, (0, 1, 3, 11): 16, (0, 1, 4, 5): 17, (0, 1, 4, 6): 18, (0, 1, 4, 7): 19, (0, 1, 4, 8): 20, (0, 1, 4, 9): 21, (0, 1, 4, 10): 22, (0, 1, 4, 11): 23, (0, 1, 5, 6): 24, (0, 1, 5, 7): 25, (0, 1, 5, 8): 26, (0, 1, 5, 9): 27, (0, 1, 5, 10): 28, (0, 1, 5, 11): 29, (0, 1, 6, 7): 30, (0, 1, 6, 8): 31, (0, 1, 6, 9): 32, (0, 1, 6, 10): 33, (0, 1, 6, 11): 34, (0, 1, 7, 8): 35, (0, 1, 7, 9): 36, (0, 1, 7, 10): 37, (0, 1, 7, 11): 38, (0, 1, 8, 9): 39, (0, 1, 8, 10): 40, (0, 1, 8, 11): 41, (0, 1, 9, 10): 42, (0, 1, 9, 11): 43, (0, 1, 10, 11): 44, (0, 2, 3, 4): 45, (0, 2, 3, 5): 46, (0, 2, 3, 6): 47, (0, 2, 3, 7): 48, (0, 2, 3, 8): 49, (0, 2, 3, 9): 50, (0, 2, 3, 10): 51, (0, 2, 3, 11): 52, (0, 2, 4, 5): 53, (0, 2, 4, 6): 54, (0, 2, 4, 7): 55, (0, 2, 4, 8): 56, (0, 2, 4, 9): 57, (0, 2, 4, 10): 58, (0, 2, 4, 11): 59, (0, 2, 5, 6): 60, (0, 2, 5, 7): 61, (0, 2, 5, 8): 62, (0, 2, 5, 9): 63, (0, 2, 5, 10): 64, (0, 2, 5, 11): 65, (0, 2, 6, 7): 66, (0, 2, 6, 8): 67, (0, 2, 6, 9): 68, (0, 2, 6, 10): 69, (0, 2, 6, 11): 70, (0, 2, 7, 8): 71, (0, 2, 7, 9): 72, (0, 2, 7, 10): 73, (0, 2, 7, 11): 74, (0, 2, 8, 9): 75, (0, 2, 8, 10): 76, (0, 2, 8, 11): 77, (0, 2, 9, 10): 78, (0, 2, 9, 11): 79, (0, 2, 10, 11): 80, (0, 3, 4, 5): 81, (0, 3, 4, 6): 82, (0, 3, 4, 7): 83, (0, 3, 4, 8): 84, (0, 3, 4, 9): 85, (0, 3, 4, 10): 86, (0, 3, 4, 11): 87, (0, 3, 5, 6): 88, (0, 3, 5, 7): 89, (0, 3, 5, 8): 90, (0, 3, 5, 9): 91, (0, 3, 5, 10): 92, (0, 3, 5, 11): 93, (0, 3, 6, 7): 94, (0, 3, 6, 8): 95, (0, 3, 6, 9): 96, (0, 3, 6, 10): 97, (0, 3, 6, 11): 98, (0, 3, 7, 8): 99, (0, 3, 7, 9): 100, (0, 3, 7, 10): 101, (0, 3, 7, 11): 102, (0, 3, 8, 9): 103, (0, 3, 8, 10): 104, (0, 3, 8, 11): 105, (0, 3, 9, 10): 106, (0, 3, 9, 11): 107, (0, 3, 10, 11): 108, (0, 4, 5, 6): 109, (0, 4, 5, 7): 110, (0, 4, 5, 8): 111, (0, 4, 5, 9): 112, (0, 4, 5, 10): 113, (0, 4, 5, 11): 114, (0, 4, 6, 7): 115, (0, 4, 6, 8): 116, (0, 4, 6, 9): 117, (0, 4, 6, 10): 118, (0, 4, 6, 11): 119, (0, 4, 7, 8): 120, (0, 4, 7, 9): 121, (0, 4, 7, 10): 122, (0, 4, 7, 11): 123, (0, 4, 8, 9): 124, (0, 4, 8, 10): 125, (0, 4, 8, 11): 126, (0, 4, 9, 10): 127, (0, 4, 9, 11): 128, (0, 4, 10, 11): 129, (0, 5, 6, 7): 130, (0, 5, 6, 8): 131, (0, 5, 6, 9): 132, (0, 5, 6, 10): 133, (0, 5, 6, 11): 134, (0, 5, 7, 8): 135, (0, 5, 7, 9): 136, (0, 5, 7, 10): 137, (0, 5, 7, 11): 138, (0, 5, 8, 9): 139, (0, 5, 8, 10): 140, (0, 5, 8, 11): 141, (0, 5, 9, 10): 142, (0, 5, 9, 11): 143, (0, 5, 10, 11): 144, (0, 6, 7, 8): 145, (0, 6, 7, 9): 146, (0, 6, 7, 10): 147, (0, 6, 7, 11): 148, (0, 6, 8, 9): 149, (0, 6, 8, 10): 150, (0, 6, 8, 11): 151, (0, 6, 9, 10): 152, (0, 6, 9, 11): 153, (0, 6, 10, 11): 154, (0, 7, 8, 9): 155, (0, 7, 8, 10): 156, (0, 7, 8, 11): 157, (0, 7, 9, 10): 158, (0, 7, 9, 11): 159, (0, 7, 10, 11): 160, (0, 8, 9, 10): 161, (0, 8, 9, 11): 162, (0, 8, 10, 11): 163, (0, 9, 10, 11): 164, (1, 2, 3, 4): 165, (1, 2, 3, 5): 166, (1, 2, 3, 6): 167, (1, 2, 3, 7): 168, (1, 2, 3, 8): 169, (1, 2, 3, 9): 170, (1, 2, 3, 10): 171, (1, 2, 3, 11): 172, (1, 2, 4, 5): 173, (1, 2, 4, 6): 174, (1, 2, 4, 7): 175, (1, 2, 4, 8): 176, (1, 2, 4, 9): 177, (1, 2, 4, 10): 178, (1, 2, 4, 11): 179, (1, 2, 5, 6): 180, (1, 2, 5, 7): 181, (1, 2, 5, 8): 182, (1, 2, 5, 9): 183, (1, 2, 5, 10): 184, (1, 2, 5, 11): 185, (1, 2, 6, 7): 186, (1, 2, 6, 8): 187, (1, 2, 6, 9): 188, (1, 2, 6, 10): 189, (1, 2, 6, 11): 190, (1, 2, 7, 8): 191, (1, 2, 7, 9): 192, (1, 2, 7, 10): 193, (1, 2, 7, 11): 194, (1, 2, 8, 9): 195, (1, 2, 8, 10): 196, (1, 2, 8, 11): 197, (1, 2, 9, 10): 198, (1, 2, 9, 11): 199, (1, 2, 10, 11): 200, (1, 3, 4, 5): 201, (1, 3, 4, 6): 202, (1, 3, 4, 7): 203, (1, 3, 4, 8): 204, (1, 3, 4, 9): 205, (1, 3, 4, 10): 206, (1, 3, 4, 11): 207, (1, 3, 5, 6): 208, (1, 3, 5, 7): 209, (1, 3, 5, 8): 210, (1, 3, 5, 9): 211, (1, 3, 5, 10): 212, (1, 3, 5, 11): 213, (1, 3, 6, 7): 214, (1, 3, 6, 8): 215, (1, 3, 6, 9): 216, (1, 3, 6, 10): 217, (1, 3, 6, 11): 218, (1, 3, 7, 8): 219, (1, 3, 7, 9): 220, (1, 3, 7, 10): 221, (1, 3, 7, 11): 222, (1, 3, 8, 9): 223, (1, 3, 8, 10): 224, (1, 3, 8, 11): 225, (1, 3, 9, 10): 226, (1, 3, 9, 11): 227, (1, 3, 10, 11): 228, (1, 4, 5, 6): 229, (1, 4, 5, 7): 230, (1, 4, 5, 8): 231, (1, 4, 5, 9): 232, (1, 4, 5, 10): 233, (1, 4, 5, 11): 234, (1, 4, 6, 7): 235, (1, 4, 6, 8): 236, (1, 4, 6, 9): 237, (1, 4, 6, 10): 238, (1, 4, 6, 11): 239, (1, 4, 7, 8): 240, (1, 4, 7, 9): 241, (1, 4, 7, 10): 242, (1, 4, 7, 11): 243, (1, 4, 8, 9): 244, (1, 4, 8, 10): 245, (1, 4, 8, 11): 246, (1, 4, 9, 10): 247, (1, 4, 9, 11): 248, (1, 4, 10, 11): 249, (1, 5, 6, 7): 250, (1, 5, 6, 8): 251, (1, 5, 6, 9): 252, (1, 5, 6, 10): 253, (1, 5, 6, 11): 254, (1, 5, 7, 8): 255, (1, 5, 7, 9): 256, (1, 5, 7, 10): 257, (1, 5, 7, 11): 258, (1, 5, 8, 9): 259, (1, 5, 8, 10): 260, (1, 5, 8, 11): 261, (1, 5, 9, 10): 262, (1, 5, 9, 11): 263, (1, 5, 10, 11): 264, (1, 6, 7, 8): 265, (1, 6, 7, 9): 266, (1, 6, 7, 10): 267, (1, 6, 7, 11): 268, (1, 6, 8, 9): 269, (1, 6, 8, 10): 270, (1, 6, 8, 11): 271, (1, 6, 9, 10): 272, (1, 6, 9, 11): 273, (1, 6, 10, 11): 274, (1, 7, 8, 9): 275, (1, 7, 8, 10): 276, (1, 7, 8, 11): 277, (1, 7, 9, 10): 278, (1, 7, 9, 11): 279, (1, 7, 10, 11): 280, (1, 8, 9, 10): 281, (1, 8, 9, 11): 282, (1, 8, 10, 11): 283, (1, 9, 10, 11): 284, (2, 3, 4, 5): 285, (2, 3, 4, 6): 286, (2, 3, 4, 7): 287, (2, 3, 4, 8): 288, (2, 3, 4, 9): 289, (2, 3, 4, 10): 290, (2, 3, 4, 11): 291, (2, 3, 5, 6): 292, (2, 3, 5, 7): 293, (2, 3, 5, 8): 294, (2, 3, 5, 9): 295, (2, 3, 5, 10): 296, (2, 3, 5, 11): 297, (2, 3, 6, 7): 298, (2, 3, 6, 8): 299, (2, 3, 6, 9): 300, (2, 3, 6, 10): 301, (2, 3, 6, 11): 302, (2, 3, 7, 8): 303, (2, 3, 7, 9): 304, (2, 3, 7, 10): 305, (2, 3, 7, 11): 306, (2, 3, 8, 9): 307, (2, 3, 8, 10): 308, (2, 3, 8, 11): 309, (2, 3, 9, 10): 310, (2, 3, 9, 11): 311, (2, 3, 10, 11): 312, (2, 4, 5, 6): 313, (2, 4, 5, 7): 314, (2, 4, 5, 8): 315, (2, 4, 5, 9): 316, (2, 4, 5, 10): 317, (2, 4, 5, 11): 318, (2, 4, 6, 7): 319, (2, 4, 6, 8): 320, (2, 4, 6, 9): 321, (2, 4, 6, 10): 322, (2, 4, 6, 11): 323, (2, 4, 7, 8): 324, (2, 4, 7, 9): 325, (2, 4, 7, 10): 326, (2, 4, 7, 11): 327, (2, 4, 8, 9): 328, (2, 4, 8, 10): 329, (2, 4, 8, 11): 330, (2, 4, 9, 10): 331, (2, 4, 9, 11): 332, (2, 4, 10, 11): 333, (2, 5, 6, 7): 334, (2, 5, 6, 8): 335, (2, 5, 6, 9): 336, (2, 5, 6, 10): 337, (2, 5, 6, 11): 338, (2, 5, 7, 8): 339, (2, 5, 7, 9): 340, (2, 5, 7, 10): 341, (2, 5, 7, 11): 342, (2, 5, 8, 9): 343, (2, 5, 8, 10): 344, (2, 5, 8, 11): 345, (2, 5, 9, 10): 346, (2, 5, 9, 11): 347, (2, 5, 10, 11): 348, (2, 6, 7, 8): 349, (2, 6, 7, 9): 350, (2, 6, 7, 10): 351, (2, 6, 7, 11): 352, (2, 6, 8, 9): 353, (2, 6, 8, 10): 354, (2, 6, 8, 11): 355, (2, 6, 9, 10): 356, (2, 6, 9, 11): 357, (2, 6, 10, 11): 358, (2, 7, 8, 9): 359, (2, 7, 8, 10): 360, (2, 7, 8, 11): 361, (2, 7, 9, 10): 362, (2, 7, 9, 11): 363, (2, 7, 10, 11): 364, (2, 8, 9, 10): 365, (2, 8, 9, 11): 366, (2, 8, 10, 11): 367, (2, 9, 10, 11): 368, (3, 4, 5, 6): 369, (3, 4, 5, 7): 370, (3, 4, 5, 8): 371, (3, 4, 5, 9): 372, (3, 4, 5, 10): 373, (3, 4, 5, 11): 374, (3, 4, 6, 7): 375, (3, 4, 6, 8): 376, (3, 4, 6, 9): 377, (3, 4, 6, 10): 378, (3, 4, 6, 11): 379, (3, 4, 7, 8): 380, (3, 4, 7, 9): 381, (3, 4, 7, 10): 382, (3, 4, 7, 11): 383, (3, 4, 8, 9): 384, (3, 4, 8, 10): 385, (3, 4, 8, 11): 386, (3, 4, 9, 10): 387, (3, 4, 9, 11): 388, (3, 4, 10, 11): 389, (3, 5, 6, 7): 390, (3, 5, 6, 8): 391, (3, 5, 6, 9): 392, (3, 5, 6, 10): 393, (3, 5, 6, 11): 394, (3, 5, 7, 8): 395, (3, 5, 7, 9): 396, (3, 5, 7, 10): 397, (3, 5, 7, 11): 398, (3, 5, 8, 9): 399, (3, 5, 8, 10): 400, (3, 5, 8, 11): 401, (3, 5, 9, 10): 402, (3, 5, 9, 11): 403, (3, 5, 10, 11): 404, (3, 6, 7, 8): 405, (3, 6, 7, 9): 406, (3, 6, 7, 10): 407, (3, 6, 7, 11): 408, (3, 6, 8, 9): 409, (3, 6, 8, 10): 410, (3, 6, 8, 11): 411, (3, 6, 9, 10): 412, (3, 6, 9, 11): 413, (3, 6, 10, 11): 414, (3, 7, 8, 9): 415, (3, 7, 8, 10): 416, (3, 7, 8, 11): 417, (3, 7, 9, 10): 418, (3, 7, 9, 11): 419, (3, 7, 10, 11): 420, (3, 8, 9, 10): 421, (3, 8, 9, 11): 422, (3, 8, 10, 11): 423, (3, 9, 10, 11): 424, (4, 5, 6, 7): 425, (4, 5, 6, 8): 426, (4, 5, 6, 9): 427, (4, 5, 6, 10): 428, (4, 5, 6, 11): 429, (4, 5, 7, 8): 430, (4, 5, 7, 9): 431, (4, 5, 7, 10): 432, (4, 5, 7, 11): 433, (4, 5, 8, 9): 434, (4, 5, 8, 10): 435, (4, 5, 8, 11): 436, (4, 5, 9, 10): 437, (4, 5, 9, 11): 438, (4, 5, 10, 11): 439, (4, 6, 7, 8): 440, (4, 6, 7, 9): 441, (4, 6, 7, 10): 442, (4, 6, 7, 11): 443, (4, 6, 8, 9): 444, (4, 6, 8, 10): 445, (4, 6, 8, 11): 446, (4, 6, 9, 10): 447, (4, 6, 9, 11): 448, (4, 6, 10, 11): 449, (4, 7, 8, 9): 450, (4, 7, 8, 10): 451, (4, 7, 8, 11): 452, (4, 7, 9, 10): 453, (4, 7, 9, 11): 454, (4, 7, 10, 11): 455, (4, 8, 9, 10): 456, (4, 8, 9, 11): 457, (4, 8, 10, 11): 458, (4, 9, 10, 11): 459, (5, 6, 7, 8): 460, (5, 6, 7, 9): 461, (5, 6, 7, 10): 462, (5, 6, 7, 11): 463, (5, 6, 8, 9): 464, (5, 6, 8, 10): 465, (5, 6, 8, 11): 466, (5, 6, 9, 10): 467, (5, 6, 9, 11): 468, (5, 6, 10, 11): 469, (5, 7, 8, 9): 470, (5, 7, 8, 10): 471, (5, 7, 8, 11): 472, (5, 7, 9, 10): 473, (5, 7, 9, 11): 474, (5, 7, 10, 11): 475, (5, 8, 9, 10): 476, (5, 8, 9, 11): 477, (5, 8, 10, 11): 478, (5, 9, 10, 11): 479, (6, 7, 8, 9): 480, (6, 7, 8, 10): 481, (6, 7, 8, 11): 482, (6, 7, 9, 10): 483, (6, 7, 9, 11): 484, (6, 7, 10, 11): 485, (6, 8, 9, 10): 486, (6, 8, 9, 11): 487, (6, 8, 10, 11): 488, (6, 9, 10, 11): 489, (7, 8, 9, 10): 490, (7, 8, 9, 11): 491, (7, 8, 10, 11): 492, (7, 9, 10, 11): 493, (8, 9, 10, 11): 494}
csimplify={}
udesimplify={}
ude=[0,1,2,3,8,9,10,11]
num=0
for i in range(8):
    for j in range(8):
        if i!=j:
            for k in range(8):
                if k in (i,j):
                    continue
                for l in range(8):
                    if l in (i,j,k):
                        continue
                    for m in range(8):
                        if m in (i,j,k,l):
                            continue
                        for n in range(8):
                            if n in (i,j,k,l,m):
                                continue
                            for o in range(8):
                                if o in (i,j,k,l,m,n):
                                    continue
                                for p in range(8):
                                    if p not in (i,j,k,l,m,n,o):
                                        csimplify[(i,j,k,l,m,n,o,p)]=num
                                        udesimplify[(ude[i],ude[j],ude[k],ude[l],ude[m],ude[n],ude[o],ude[p])]=num
                                        num+=1
mesimplify={(4, 5, 6, 7): 0, (4, 5, 7, 6): 1, (4, 6, 5, 7): 2, (4, 6, 7, 5): 3, (4, 7, 5, 6): 4, (4, 7, 6, 5): 5, (5, 4, 6, 7): 6, (5, 4, 7, 6): 7, (5, 6, 4, 7): 8, (5, 6, 7, 4): 9, (5, 7, 4, 6): 10, (5, 7, 6, 4): 11, (6, 4, 5, 7): 12, (6, 4, 7, 5): 13, (6, 5, 4, 7): 14, (6, 5, 7, 4): 15, (6, 7, 4, 5): 16, (6, 7, 5, 4): 17, (7, 4, 5, 6): 18, (7, 4, 6, 5): 19, (7, 5, 4, 6): 20, (7, 5, 6, 4): 21, (7, 6, 4, 5): 22, (7, 6, 5, 4): 23}
medsimplify={(1, 1, 3, 3): 0, (1, 3, 1, 3): 1, (1, 3, 3, 1): 2, (3, 1, 1, 3): 3, (3, 1, 3, 1): 4, (3, 3, 1, 1): 5}
print(time.time()-t,"s")

def getdict1(dict1step):
    global dict1
    predictstate=[(cc,ccd,ce,ced,1,-1,-1)]
    newpredictstate=[]
    key=(cpsimplify[tuple([positionsimplify[ccd[cc[i]]] for i in range(7)])]*177147+epsimplify[tuple([positionsimplify[ced[ce[i]]] for i in range(11)])])*495+mepsimplify[tuple(sorted([ce.index(i) for i in range(4,8)]))]
    dict1[key]=1
    t0=time.time()
    for step in range(1,dict1step+1):
        t1=time.time()
        for cube in predictstate:
            oc0,ocd0,oe0,oed0,oldstep,f1,f2=cube
            for f in range(6):
                if step==1 or f1!=f and not ((f1==5 and f==0 or f1==4 and f==2 or f1==3 and f==1) or (step>2 and f==f2 and (f==0 and f1==5 or f==1 and f1==3 or f==2 and f1==4))):
                    re=faceedge[f]
                    rc=facecorner[f]
                    adjf=adj[f]
                    newstep=oldstep*18+3*f+2
                    oc,ocd,oe,oed=oc0,ocd0,oe0,oed0
                    for t in range(3):
                        ne=oe.copy()
                        ned=oed.copy()
                        nc=oc.copy()
                        ncd=ocd.copy()
                        for n in range(4):
                            ne[re[n]]=oe[re[n-3]]
                            nc[rc[n]]=oc[rc[n-3]]
                            en=oe[re[n]]
                            if oed[en]!=f:
                                ned[en]=adjf[adjf.index(oed[en])-3]
                            cn=oc[rc[n]]
                            if ocd[cn]!=f:
                                ncd[cn]=adjf[adjf.index(ocd[cn])-3]
                        oc,ocd,oe,oed=nc,ncd,ne,ned
                        key=(cpsimplify[tuple([positionsimplify[ncd[nc[i]]] for i in range(7)])]*177147+epsimplify[tuple([positionsimplify[ned[ne[i]]] for i in range(11)])])*495+mepsimplify[tuple(sorted([ne.index(i) for i in range(4,8)]))]
                        if key not in dict1:
                            dict1[key]=newstep
                            if step!=dict1step:
                                newpredictstate.append((nc,ncd,ne,ned,newstep,f,f1))
                        newstep-=1
        print("{:<8}{:<8}{:<16}{:<16}{:<16f}\n".format(1,step,len(newpredictstate),len(dict1),time.time()-t1),end="")
        predictstate=newpredictstate
        newpredictstate=[]
    print("{:<8}{:<8}{:<16}{:<16}{:<16f}\n".format(1,"total","",len(dict1),time.time()-t0),end="")

def getdict2(dict2step):
    global dict2
    predictstate=[(cc,ce,cmed,0,-1,-1)]
    newpredictstate=[]
    key=((csimplify[tuple(cc)]*40320+udesimplify[tuple(ce[0:4]+ce[8:12])])*24+mesimplify[tuple(ce[4:8])])*6+medsimplify[tuple(cmed)]
    dict2[key]=1
    t0=time.time()
    for step in range(1,dict2step+1):
        t1=time.time()
        for cube in predictstate:
            oc,oe,omed,oldstep,f1,f2=cube
            for r in phase2rotations:
                f=r//3
                t=r%3+1
                if step==1 or f1!=f and not ((f1==5 and f==0 or f1==4 and f==2 or f1==3 and f==1) or (step>2 and f==f2 and (f==0 and f1==5 or f==1 and f1==3 or f==2 and f1==4))):
                    nc=oc.copy()
                    ne=oe.copy()
                    nmed=omed.copy()
                    fe=faceedge[f]
                    fc=facecorner[f]
                    if f==0 or f==5:
                        for k in range(4):
                            ne[fe[k]]=oe[fe[(k+t)-4]]
                            nc[fc[k]]=oc[fc[(k+t)-4]]
                    else:
                        for k in range(4):
                            ne[fe[k]]=oe[fe[k-2]]
                            nc[fc[k]]=oc[fc[k-2]]
                        for e in [fe[1],fe[3]]:
                            en=oe[e]-4
                            if omed[en]!=f:
                                nmed[en]=antithesis[omed[en]]
                    key=((csimplify[tuple(nc)]*40320+udesimplify[tuple(ne[0:4]+ne[8:12])])*24+mesimplify[tuple(ne[4:8])])*6+medsimplify[tuple(nmed)]
                    if key not in dict2:
                        newstep=oldstep+(3*f+3-t)*eighteen[step-1]
                        dict2[key]=newstep+eighteen[step]
                        if step!=dict2step:
                            newpredictstate.append((nc,ne,nmed,newstep,f,f1))
        print("{:<8}{:<8}{:<16}{:<16}{:<16f}\n".format(2,step,len(newpredictstate),len(dict2),time.time()-t1),end="")
        predictstate=newpredictstate
        newpredictstate=[]
    print("{:<8}{:<8}{:<16}{:<16}{:<16f}\n".format(2,"total","",len(dict2),time.time()-t0),end="")

def solve(c,cd,e,ed,threadid):
    global threadsolutions,htm,qtm,minmove,verifiednum
    tstart=time.time()
    cubes=[(c,cd,e,ed,1,0,-1,-1)]
    solutionnum=0
    totalnum=1
    minstr=eighteen[stepshouldbelow]
    #phase 1
    while cubes:
        oc0,ocd0,oe0,oed0,previousstep,step,f1,f2=cubes.pop()
        step+=1
        for f in range(6):
            if step==1 or f!=f1 and not ((f1==5 and f==0 or f1==4 and f==2 or f1==3 and f==1) or (step>2 and f==f2 and (f==0 and f1==5 or f==1 and f1==3 or f==2 and f1==4))):
                re=faceedge[f]
                rc=facecorner[f]
                adjf=adj[f]
                m1_1=previousstep*18+3*f
                totalnum+=3
                oc,ocd,oe,oed=oc0,ocd0,oe0,oed0
                for t in range(3):
                    ne=oe.copy()
                    ned=oed.copy()
                    nc=oc.copy()
                    ncd=ocd.copy()
                    for n in range(4):
                        ne[re[n]]=oe[re[n-3]]
                        nc[rc[n]]=oc[rc[n-3]]
                        en=oe[re[n]]
                        if oed[en]!=f:
                            ned[en]=adjf[adjf.index(oed[en])-3]
                        cn=oc[rc[n]]
                        if ocd[cn]!=f:
                            ncd[cn]=adjf[adjf.index(ocd[cn])-3]
                    oc,ocd,oe,oed=nc,ncd,ne,ned
                    if step<phase1maxstep:
                        cubes.append((nc,ncd,ne,ned,m1_1,step,f,f1))
                    key=(cpsimplify[tuple([positionsimplify[ncd[nc[i]]] for i in range(7)])]*177147+epsimplify[tuple([positionsimplify[ned[ne[i]]] for i in range(11)])])*495+mepsimplify[tuple(sorted([ne.index(i) for i in range(4,8)]))]
                    if key in dict1:
                        solutionnum+=1
                        m1_2=dict1[key]
                        if m1_2!=1:
                            nc1,ncd1,ne1,ned1=oc1,ocd1,oe1,oed1=nc,ncd,ne,ned
                            m1=m1_1
                            f0=f
                            while m1_2>=18:
                                ft=m1_2%18
                                m1=18*m1+ft
                                m1_2//=18
                                f0=ft//3
                                t0=ft%3+1
                                re1=faceedge[f0]
                                rc1=facecorner[f0]
                                adjf1=adj[f0]
                                ne1=oe1.copy()
                                ned1=oed1.copy()
                                nc1=oc1.copy()
                                ncd1=ocd1.copy()
                                for n in range(4):
                                    ne1[re1[n]]=oe1[re1[n+t0-4]]
                                    nc1[rc1[n]]=oc1[rc1[n+t0-4]]
                                    en=oe1[re1[n]]
                                    if oed1[en]!=f0:
                                        ned1[en]=adjf1[adjf1.index(oed1[en])+t0-4]
                                    cn=oc1[rc1[n]]
                                    if ocd1[cn]!=f0:
                                        ncd1[cn]=adjf1[adjf1.index(ocd1[cn])+t0-4]
                                oc1,ocd1,oe1,oed1=nc1,ncd1,ne1,ned1
                            #phase 2
                            key=((csimplify[tuple(nc1)]*40320+udesimplify[tuple(ne1[0:4]+ne1[8:12])])*24+mesimplify[tuple(ne1[4:8])])*6+medsimplify[tuple(ned1[4:8])]
                            if key in dict2:
                                m2=dict2[key]
                                solution=(m1-1)*eighteen[int(log(m2,18))]+m2
                                if solution<minmove:
                                    minmove=minstr=solution
                                    htm=int(log(solution,18))
                                    p2=int(log(m2,18))
                                    qtmvalue=htm
                                    numstr=decodevalue(solution)
                                    for i in range(int(len(numstr)/2)):
                                        if numstr[2*i+1]=="2":
                                            qtmvalue+=1
                                    if qtmvalue<qtm:
                                        qtm=qtmvalue
                                    print("{:<8}{:<18}{:<6}{:<24}{:<14f}1     {:<36}{}\n".format(threadid,f"{htm} = {step} + {htm-step-p2} + {p2}",qtmvalue,str(solutionnum)+"/"+str(totalnum),time.time()-tstart,solution,numstr),end="")
                            if int(log(m1,18))+dict2step<=htm or key in dict2 and int(log(solution,18))-1<=htm:
                                re1=faceedge[f0]
                                rc1=facecorner[f0]
                                adjf1=adj[f0]
                                ne1=oe1.copy()
                                ned1=oed1.copy()
                                nc1=oc1.copy()
                                ncd1=ocd1.copy()
                                for n in range(4):
                                    ne1[re1[n]]=oe1[re1[n-2]]
                                    nc1[rc1[n]]=oc1[rc1[n-2]]
                                    en=oe1[re1[n]]
                                    if oed1[en]!=f0:
                                        ned1[en]=adjf1[adjf1.index(oed1[en])-2]
                                    cn=oc1[rc1[n]]
                                    if ocd1[cn]!=f0:
                                        ncd1[cn]=adjf1[adjf1.index(ocd1[cn])-2]
                                        
                                key=((csimplify[tuple(nc1)]*40320+udesimplify[tuple(ne1[0:4]+ne1[8:12])])*24+mesimplify[tuple(ne1[4:8])])*6+medsimplify[tuple(ned1[4:8])]
                                if key in dict2:
                                    m2=dict2[key]
                                    solution=(m1-3)*eighteen[int(log(m2,18))]+m2
                                    if solution<minmove:
                                        minmove=minstr=solution
                                        htm=int(log(solution,18))
                                        p2=int(log(m2,18))
                                        qtmvalue=htm
                                        numstr=decodevalue(solution)
                                        for i in range(int(len(numstr)/2)):
                                            if numstr[2*i+1]=="2":
                                                qtmvalue+=1
                                        if qtmvalue<qtm:
                                            qtm=qtmvalue
                                        print("{:<8}{:<18}{:<6}{:<24}{:<14f}2     {:<36}{}\n".format(threadid,f"{htm} = {step} + {htm-step-p2} + {p2}",qtmvalue,str(solutionnum)+"/"+str(totalnum),time.time()-tstart,solution,numstr),end="")
                    m1_1+=1
    threadsolutions[threadid]=minstr
    verifiednum.append(solutionnum)
    print("finish thread {}    thread min htm {}    {}/{}    time {:f}s\n".format(threadid,int(log(minstr,18)),solutionnum,totalnum,time.time()-tstart),end="")

def randomcube():
    a=random.randrange(512,1024)
    randomstring=""
    for i in range(a):
        r=str(random.randrange(0,6))+str(random.randrange(1,4))
        randomstring+=r
    return randomstring

changebasetable=[[1,5,2,0,4,3],[2,1,5,3,0,4],[0,1,2,3,4,5]]
def getcubewithbase(randomstring,base):
    l=int(len(randomstring)/2)
    cubepack=(cc,ccd,ce,ced)
    for i in range(l):
        f=changebasetable[base][int(randomstring[2*i])]
        t=int(randomstring[2*i+1])
        cubepack=rotatecube(f,t,*cubepack)
    return cubepack
    
def rotatecube(f,t,oc,ocd,oe,oed):
    re=faceedge[f]
    rc=facecorner[f]
    adjf=adj[f]
    ne=oe.copy()
    ned=oed.copy()
    nc=oc.copy()
    ncd=ocd.copy()
    for n in range(4):
        ne[re[n]]=oe[re[n+t-4]]
        nc[rc[n]]=oc[rc[n+t-4]]
        en=oe[re[n]]
        if oed[en]!=f:
            ned[en]=adjf[adjf.index(oed[en])+t-4]
        cn=oc[rc[n]]
        if ocd[cn]!=f:
            ncd[cn]=adjf[adjf.index(ocd[cn])+t-4]
    return nc,ncd,ne,ned

def decodevalue(n):
    s=""
    while n>=18:
        ft=n%18
        n//=18
        s=str(ft//3)+str(ft%3+1)+s
    return s
    
allrotation=["U","U2","U'","L","L2","L'","F","F2","F'","R","R2","R'","B","B2","B'","D","D2","D'"]
def rotatenumbertostring(s):
    r=""
    for i in range(int(len(s)/2)):
        r+=allrotation[3*int(s[2*i])+int(s[2*i+1])-1]
    return r

def rotatestringtonumber(s):
    r=""
    for c in s:
        if c=="2":
            r=r[:-1]+"2"
        elif c=="'" or c=="3":
            r=r[:-1]+"3"
        elif c in allrotation:
            i=allrotation.index(c)
            r+=str(i//3)+"1"
    return r

def reverserotation(s):
    r=""
    for i in range(int(len(s)/2)):
        r=s[2*i]+str(4-int(s[2*i+1]))+r
    return r

def printdictsize(d):
    a=sys.getsizeof(d)
    b=0
    for i in d.keys():
        b+=sys.getsizeof(i)
    for i in d.values():
        b+=sys.getsizeof(i)
    print("dict",a,"B    values and keys",b,"B    total",(a+b)/1000000000,"GB    ",(a+b)/1000000,"MB")

dict1={}
dict2={}
dict1step=8#8
dict2step=9#9
dict1thread=threading.Thread(target=getdict1,args=(dict1step,))
dict2thread=threading.Thread(target=getdict2,args=(dict2step,))
print("{:<8}{:<8}{:<16}{:<16}{:<16}\n".format("dict","step","cubes left","dict length","time/s"),end="")
tdictstart=time.time()
dict1thread.start()
dict2thread.start()
dict2thread.join()
dict1thread.join()
# getdict1(dict1step)
# getdict2(dict2step)
tdictend=time.time()
print("time",tdictend-tdictstart,"s")
'''
print("dict1 size",len(dict1))
printdictsize(dict1)
print("dict2 size",len(dict2))
printdictsize(dict2)
'''
htms=[]
qtms=[]
verifiednum=[]
starttime=time.time()
phase1maxstep=5#6
stepshouldbelow=phase1maxstep+dict1step+dict2step+1
miss=0
threadn=6
cubenumber=50
for i in range(cubenumber):
    t1=time.time()
    print("\n\ncube",i+1)
    print(time.strftime("%Y-%m-%d %H:%M:%S",time.localtime()))
    htm=stepshouldbelow
    qtm=htm*2
    minmove=eighteen[stepshouldbelow]
    
    randomstring=randomcube()
    #randomstring=rotatestringtonumber("R L U2 F U' D F2 R2 B2 L U2 F' B' U R2 D F2 U R2 U")
    print("random with",int(len(randomstring)/2),"moves")
    #print(randomstring)
    print("search depth",phase1maxstep,"+",dict1step,"+",dict2step,"=",stepshouldbelow-1)
    
    unsolvedcubes=[]
    for base in range(3):
        unsolvedcubes.append(getcubewithbase(randomstring,base))
    reverserandomstring=reverserotation(randomstring)
    for base in range(3):
        unsolvedcubes.append(getcubewithbase(reverserandomstring,base))
    threadsolutions=[eighteen[stepshouldbelow]]*threadn
    
    print("start",threadn,"threads")
    print("{:<8}{:<18}{:<6}{:<24}{:<14}{:<6}{:<36}".format("thread","htm","qtm","in dict1/total","time/s","type","solution"))
    
    threads=[threading.Thread(target=solve,args=(*unsolvedcubes[t],t)) for t in range(threadn)]
    for t in threads:
        t.start()
    for t in threads:
        t.join()
    '''
    #solve(*unsolvedcubes[0],0)
    for j in range(6):
        solve(*unsolvedcubes[j],j)
    '''
    print("\nfinish all threads of cube",i+1)
    print("completed phase one number",verifiednum[-threadn:])
    
    if htm>=stepshouldbelow:
        miss+=1
        print("no solution below",htm,"steps for this cube")
        print("miss rate",miss,"/",i+1)
    else:
        bestthread=0
        print("{:<8}{:<8}{}".format("thread","htm","solution"))
        for j in range(threadn):
            print("{:<8}{:<8}{:<36}{}".format(j,int(log(threadsolutions[j],18)),threadsolutions[j],decodevalue(threadsolutions[j])))
            if minmove==threadsolutions[j]:
                bestthread=j
            elif minmove>threadsolutions[j]:
                minmove=threadsolutions[j]
                htm=int(log(threadsolutions[j],18))
                bestthread=j
        
        bestrotation=decodevalue(minmove)
        htms.append(htm)
        qtms.append(qtm)
        print("\nbest solution in thread",bestthread)
        print("min htm",htm,", qtm",qtm,"solution",minmove,bestrotation,rotatenumbertostring(bestrotation))
        print("current htm results:",htms)
        print("average htm",sum(htms)/len(htms))
        print("average qtm",sum(qtms)/len(qtms))
    t2=time.time()
    print("time:",t2-t1,"s ","average time",(t2-starttime)/(i+1),time.strftime("%Y-%m-%d %H:%M:%S",time.localtime()))
    print("estimated time for rest",cubenumber-i-1,"cubes:",(t2-starttime)*(cubenumber-i-1)/(i+1),"s")
endtime=time.time()

print("\n\ntwo phase algorithm version 11")
print(time.strftime("%Y-%m-%d %H:%M:%S",time.localtime()))
print("dict time",tdictend-tdictstart,"s")
print("total time",endtime-starttime,"s, average time",(endtime-starttime)/cubenumber,"s")
print("average phase 1 completed number",sum(verifiednum)/len(verifiednum),"max",max(verifiednum),"min",min(verifiednum))
print("search depth",phase1maxstep,"+",dict1step,"+",dict2step,"=",stepshouldbelow-1)
print("htm",htms)
print("qtm",qtms)
if len(htms)>0:
    print("htm average",sum(htms)/len(htms),"range",min(htms),"-",max(htms))
    print("qtm average",sum(qtms)/len(qtms),"range",min(qtms),"-",max(qtms))
    print("\nmove  number")
    for i in range(min(htms),max(htms)+1):
        print(i,"  ",htms.count(i))
if miss!=0:
    print("there are",miss,"of",cubenumber,"cubes has no solution under this search depth")
